<?xml version="1.0" encoding="UTF-8"?>
<uml:Profile xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile" name="Model_Package_Description_Profile" metamodelReference="NIEM_UML_Profile-Model_Package_Description_Profile-packageImport">
  <eAnnotations xmi:id="_AT-2oLpmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML">
    <contents xmi:type="ecore:EPackage" xmi:id="_AT-2obpmEeOLgrGAeANsPw" name="Model_Package_Description_Profile" nsURI="http:///schemas/Model_Package_Description_Profile/__ZlqgLplEeOLgrGAeANsPw/0" nsPrefix="Model_Package_Description_Profile">
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_AT-2orpmEeOLgrGAeANsPw" name="POCType">
        <eAnnotations xmi:id="_AT-2o7pmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-POCType"/>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-2pLpmEeOLgrGAeANsPw" name="POCTelephone" ordered="false" lowerBound="1" upperBound="-1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-2prpmEeOLgrGAeANsPw" name="POCName" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-2qLpmEeOLgrGAeANsPw" name="POCEmail" ordered="false" lowerBound="1" upperBound="-1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_AT-2qrpmEeOLgrGAeANsPw" name="ModelPackageDescriptionFile">
        <eAnnotations xmi:id="_AT-2q7pmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
        <eAnnotations xmi:id="_AT-2rLpmEeOLgrGAeANsPw" source="http://www.eclipse.org/emf/2002/GenModel">
          <details xmi:id="_AT-2rbpmEeOLgrGAeANsPw" key="documentation" value="Constraint realized by PSM-XSD transformations.&#xD;&#xA;( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and (&#xA;              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#subset-schema')&#xA;              ) implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement&#xA;              ->forEach(subsetElement|&#xA;              subsetElement.clientDependency->exists(d|d.stereotypedBy('References')) and&#xA;              subsetElement.clientDependency->select(d|d.stereotypedBy('References')).supplier&#xA;              ->forEach(referenceElement| (subsetElement.name=referenceElement.name) and&#xA;              (subsetElement.metaClass()=referenceElement.metaClass()) and(&#xA;              subsetElement.oclIsKindOf(Namespace) implies&#xA;              subsetElement.oclAstype(Namespace).ownedMember ->forEach(subsetMember|&#xA;              referenceElement.oclAstype(Namespace).ownedMember ->exists(referenceMember|&#xA;              (subsetMember.name=referenceMember.name) and&#xA;              (subsetMember.metaClass()=referenceMember.metaClass()) ) ) ) ) ) &#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;This constraint is realized by not defining an xsd:anyType as part of the type&#xA;              system.&#xD;&#xA;Definitional.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint resolved by resolution to MPD [Rule 3-4]&#xD;&#xA;Constraint on xsd:import is realized by the PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint satisfied by other documentedComponent rules which exclude subset&#xA;              schemas.&#xD;&#xA;Constraint resolved by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint resolved by resolution to MPD [Rule 3-1]&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-MPD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#subset-schema'&#xA;              implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement&#xA;              ->exists(element| element.clientDependency&#xA;              ->select(d|d.stereotypedBy('References')).supplier.getNearestPackage()&#xA;              ->select(r|r.stereotypedBy('Namespace')).getStereotypeApplication('Namespace').targetNamespace=&#xA;              element.owner.getStereotypeApplication('Namespace').targetNamespace ) ) &#xD;&#xA;( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (&#xA;              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')&#xA;              or (&#xA;              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')&#xA;              ) ) implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement&#xA;              ->select(c|c.oclIsKindOf(DataType)).oclAsType(DataType)&#xA;              ->forAll(simpleType |&#xA;              simpleType.ownedComment->exists(documentation|documentation.stereotypedBy('Documentation')))&#xD;&#xA;This constraint is superceded by MPD [Rule 6-4]. Implementation of MPD [Rule 6-4]&#xA;              resolves this constraint. &#xD;&#xA;( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (&#xA;              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')&#xA;              or (&#xA;              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')&#xA;              ) ) implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement&#xA;              ->select(c|c.oclIsKindOf(Class) and&#xA;              not(c.stereotypedBy('PropertyHolder'))).oclAsType(Class) ->forAll(complexType |&#xA;              complexType.ownedComment->exists(documentation|documentation.stereotypedBy('Documentation'))) &#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;This constraint is realized by PSM-XSD transformations.&#xD;&#xA;Constraint schemas are not modeled with the NIEM Profile. This constraint is not&#xA;              applied.&#xD;&#xA;Constraint realized by PSM-MPD transformations.&#xD;&#xA;This constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constrained realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformation.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-MPD transformations, based on required documentation&#xA;              for modeled external schema.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Deprecated indicator not currently in NIEM Profiles, no constraint specified.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;This constraint is realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;self.base_ElementImport.profiledBy('NIEM_PSM_Profile') implies ( (&#xA;              (self.natureURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')&#xA;              or&#xA;              (self.natureURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')&#xA;              ) implies self.importedElement.getStereotypeApplication('Namespace').isConformant ) &#xD;&#xA;Non-computable constraint.&#xD;&#xA;The only Attribute Group allowed in NIEM is the&#xA;              structures:SimpleObjectAttributeGroup. The constraint is realized by PSM-XSD&#xA;              transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint resolved by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint resolved by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;This constraint is realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;UML well-formedness rules and semantics realize the constraint for referential&#xA;              integrity. &#xD;&#xA;Constraint is resolved by PSM-XSD transformations. Constraint also addressed by&#xA;              UML Property order and naming constraints.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (&#xA;              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')&#xA;              or (&#xA;              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')&#xA;              ) ) implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement&#xA;              ->select(c|c.oclIsKindOf(Classifier)).oclAsType(Classifier).attribute&#xA;              ->select(p|p.stereotypeApplication('XSDProperty').kind=XSDPropertyKindCode::element)&#xA;              ->forAll(attribute |&#xA;              attribute.ownedComment->exists(documentation|documentation.stereotypedBy('Documentation'))) &#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Since imports are derived (and not modeled), the namespace for an import is the&#xA;              same as the targetNamespace modeled for the referenced schema, and the implementation&#xA;              of NDR [Rule 6-36] resolves this constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Definitional.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-MPD transformations, based on isConformant tag for&#xA;              referenced (external) schema.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint is realized by PSM-XSD transformations.&#xD;&#xA;( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (&#xA;              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')&#xA;              or (&#xA;              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')&#xA;              ) ) implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement&#xA;              ->select(c|c.oclIsKindOf(Enumeration)).oclAsType(Enumeration).ownedLiteral&#xA;              ->forAll(literal |&#xA;              literal.ownedComment->exists(documentation|documentation.stereotypedBy('Documentation'))) &#xD;&#xA;A Reference is modeled as a non-aggregate Property. A given property (from a&#xA;              referenced PropertyHolder) may be redefined to be an aggregate (i.e., containment)&#xA;              Property. The naming and type constraints are realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Definitional.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint resolved by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-MPD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;(Constraint not enforced by this model).&#xD;&#xA;Constraint resolved by PSM-XSD transformations.&#xD;&#xA;Non-computable constraint.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Constraint realized by PSM-XSD transformations.&#xD;&#xA;Not computable.&#xD;&#xA;Constraint is realized by PSM-XSD transformations."/>
        </eAnnotations>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-2rrpmEeOLgrGAeANsPw" name="externalURI" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-2sLpmEeOLgrGAeANsPw" name="relativePathName" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-2srpmEeOLgrGAeANsPw" name="natureCode" ordered="false" lowerBound="1" eType="_AT-2urpmEeOLgrGAeANsPw" defaultValueLiteral="xsd"/>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-2tLpmEeOLgrGAeANsPw" name="purposeCode" ordered="false" lowerBound="1" eType="_AT-24LpmEeOLgrGAeANsPw" defaultValueLiteral="extension_schema"/>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-2trpmEeOLgrGAeANsPw" name="descriptionText" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_AT-2uLpmEeOLgrGAeANsPw" name="base_Usage" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/4.0.0/UML#//Usage"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EEnum" xmi:id="_AT-2urpmEeOLgrGAeANsPw" name="NatureCode">
        <eAnnotations xmi:id="_AT-2u7pmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode"/>
        <eLiterals xmi:id="_AT-2vLpmEeOLgrGAeANsPw" name="mpd"/>
        <eLiterals xmi:id="_AT-2vbpmEeOLgrGAeANsPw" name="domain_update" value="1"/>
        <eLiterals xmi:id="_AT-2vrpmEeOLgrGAeANsPw" name="iepd" value="2"/>
        <eLiterals xmi:id="_AT-2v7pmEeOLgrGAeANsPw" name="release" value="3"/>
        <eLiterals xmi:id="_AT-2wLpmEeOLgrGAeANsPw" name="binary" value="4"/>
        <eLiterals xmi:id="_AT-2wbpmEeOLgrGAeANsPw" name="doc" value="5"/>
        <eLiterals xmi:id="_AT-2wrpmEeOLgrGAeANsPw" name="image" value="6"/>
        <eLiterals xmi:id="_AT-2w7pmEeOLgrGAeANsPw" name="gif" value="7"/>
        <eLiterals xmi:id="_AT-2xLpmEeOLgrGAeANsPw" name="jpg" value="8"/>
        <eLiterals xmi:id="_AT-2xbpmEeOLgrGAeANsPw" name="png" value="9"/>
        <eLiterals xmi:id="_AT-2xrpmEeOLgrGAeANsPw" name="mdb" value="10"/>
        <eLiterals xmi:id="_AT-2x7pmEeOLgrGAeANsPw" name="pdf" value="11"/>
        <eLiterals xmi:id="_AT-2yLpmEeOLgrGAeANsPw" name="ppt" value="12"/>
        <eLiterals xmi:id="_AT-2ybpmEeOLgrGAeANsPw" name="svg" value="13"/>
        <eLiterals xmi:id="_AT-2yrpmEeOLgrGAeANsPw" name="vsd" value="14"/>
        <eLiterals xmi:id="_AT-2y7pmEeOLgrGAeANsPw" name="xls" value="15"/>
        <eLiterals xmi:id="_AT-2zLpmEeOLgrGAeANsPw" name="zip" value="16"/>
        <eLiterals xmi:id="_AT-2zbpmEeOLgrGAeANsPw" name="character" value="17"/>
        <eLiterals xmi:id="_AT-2zrpmEeOLgrGAeANsPw" name="csv" value="18"/>
        <eLiterals xmi:id="_AT-2z7pmEeOLgrGAeANsPw" name="html" value="19"/>
        <eLiterals xmi:id="_AT-20LpmEeOLgrGAeANsPw" name="text" value="20"/>
        <eLiterals xmi:id="_AT-20bpmEeOLgrGAeANsPw" name="xml" value="21"/>
        <eLiterals xmi:id="_AT-20rpmEeOLgrGAeANsPw" name="catalog" value="22"/>
        <eLiterals xmi:id="_AT-207pmEeOLgrGAeANsPw" name="changelog" value="23"/>
        <eLiterals xmi:id="_AT-21LpmEeOLgrGAeANsPw" name="owl" value="24"/>
        <eLiterals xmi:id="_AT-21bpmEeOLgrGAeANsPw" name="rdf" value="25"/>
        <eLiterals xmi:id="_AT-21rpmEeOLgrGAeANsPw" name="schematron" value="26"/>
        <eLiterals xmi:id="_AT-217pmEeOLgrGAeANsPw" name="wantlist" value="27"/>
        <eLiterals xmi:id="_AT-22LpmEeOLgrGAeANsPw" name="wsdl" value="28"/>
        <eLiterals xmi:id="_AT-22bpmEeOLgrGAeANsPw" name="xhtml" value="29"/>
        <eLiterals xmi:id="_AT-22rpmEeOLgrGAeANsPw" name="xmi" value="30"/>
        <eLiterals xmi:id="_AT-227pmEeOLgrGAeANsPw" name="xsd" value="31"/>
        <eLiterals xmi:id="_AT-23LpmEeOLgrGAeANsPw" name="xslt" value="32"/>
        <eLiterals xmi:id="_AT-23bpmEeOLgrGAeANsPw" name="file_set" value="33"/>
        <eLiterals xmi:id="_AT-23rpmEeOLgrGAeANsPw" name="core_update" value="34"/>
        <eLiterals xmi:id="_AT-237pmEeOLgrGAeANsPw" name="eiem" value="35"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EEnum" xmi:id="_AT-24LpmEeOLgrGAeANsPw" name="PurposeCode">
        <eAnnotations xmi:id="_AT-24bpmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode"/>
        <eLiterals xmi:id="_AT-24rpmEeOLgrGAeANsPw" name="extension_schema_set"/>
        <eLiterals xmi:id="_AT-247pmEeOLgrGAeANsPw" name="reference_schema_set" value="1"/>
        <eLiterals xmi:id="_AT-25LpmEeOLgrGAeANsPw" name="subset_schema_set" value="2"/>
        <eLiterals xmi:id="_AT-25bpmEeOLgrGAeANsPw" name="file" value="3"/>
        <eLiterals xmi:id="_AT-25rpmEeOLgrGAeANsPw" name="business_rules" value="4"/>
        <eLiterals xmi:id="_AT-257pmEeOLgrGAeANsPw" name="catalog" value="5"/>
        <eLiterals xmi:id="_AT-26LpmEeOLgrGAeANsPw" name="documentation" value="6"/>
        <eLiterals xmi:id="_AT-26bpmEeOLgrGAeANsPw" name="administrative" value="7"/>
        <eLiterals xmi:id="_AT-26rpmEeOLgrGAeANsPw" name="endorsement" value="8"/>
        <eLiterals xmi:id="_AT-267pmEeOLgrGAeANsPw" name="memorandum" value="9"/>
        <eLiterals xmi:id="_AT-27LpmEeOLgrGAeANsPw" name="report" value="10"/>
        <eLiterals xmi:id="_AT-27bpmEeOLgrGAeANsPw" name="conformance_report" value="11"/>
        <eLiterals xmi:id="_AT-27rpmEeOLgrGAeANsPw" name="quality_assurance_report" value="12"/>
        <eLiterals xmi:id="_AT-277pmEeOLgrGAeANsPw" name="test_report" value="13"/>
        <eLiterals xmi:id="_AT-28LpmEeOLgrGAeANsPw" name="technical_reference" value="14"/>
        <eLiterals xmi:id="_AT-28bpmEeOLgrGAeANsPw" name="non-normative_reference" value="15"/>
        <eLiterals xmi:id="_AT-28rpmEeOLgrGAeANsPw" name="normative_reference" value="16"/>
        <eLiterals xmi:id="_AT-287pmEeOLgrGAeANsPw" name="metadata_extended" value="17"/>
        <eLiterals xmi:id="_AT-29LpmEeOLgrGAeANsPw" name="sample_instance" value="18"/>
        <eLiterals xmi:id="_AT-29bpmEeOLgrGAeANsPw" name="schema" value="19"/>
        <eLiterals xmi:id="_AT-29rpmEeOLgrGAeANsPw" name="constraint_schema" value="20"/>
        <eLiterals xmi:id="_AT-297pmEeOLgrGAeANsPw" name="exchange_schema" value="21"/>
        <eLiterals xmi:id="_AT-2-LpmEeOLgrGAeANsPw" name="extension_schema" value="22"/>
        <eLiterals xmi:id="_AT-2-bpmEeOLgrGAeANsPw" name="incremental_schema" value="23"/>
        <eLiterals xmi:id="_AT-2-rpmEeOLgrGAeANsPw" name="reference_schema" value="24"/>
        <eLiterals xmi:id="_AT-2-7pmEeOLgrGAeANsPw" name="replacement_schema" value="25"/>
        <eLiterals xmi:id="_AT-2_LpmEeOLgrGAeANsPw" name="subset_schema" value="26"/>
        <eLiterals xmi:id="_AT-2_bpmEeOLgrGAeANsPw" name="tool_specific_file" value="27"/>
        <eLiterals xmi:id="_AT-2_rpmEeOLgrGAeANsPw" name="wantlist" value="28"/>
        <eLiterals xmi:id="_AT-2_7pmEeOLgrGAeANsPw" name="file_set" value="29"/>
        <eLiterals xmi:id="_AT-3ALpmEeOLgrGAeANsPw" name="schema_set" value="30"/>
        <eLiterals xmi:id="_AT-3AbpmEeOLgrGAeANsPw" name="constraint_schema_set" value="31"/>
        <eLiterals xmi:id="_AT-3ArpmEeOLgrGAeANsPw" name="exchange_schema_set" value="32"/>
        <eLiterals xmi:id="_AT-3A7pmEeOLgrGAeANsPw" name="changelog" value="33"/>
        <eLiterals xmi:id="_AT-3BLpmEeOLgrGAeANsPw" name="web_service" value="34"/>
        <eLiterals xmi:id="_AT-3BbpmEeOLgrGAeANsPw" name="data_dictionary" value="35"/>
        <eLiterals xmi:id="_AT-3BrpmEeOLgrGAeANsPw" name="data_model" value="36"/>
        <eLiterals xmi:id="_AT-3B7pmEeOLgrGAeANsPw" name="display" value="37"/>
        <eLiterals xmi:id="_AT-3CLpmEeOLgrGAeANsPw" name="mapping" value="38"/>
        <eLiterals xmi:id="_AT-3CbpmEeOLgrGAeANsPw" name="master_document" value="39"/>
        <eLiterals xmi:id="_AT-3CrpmEeOLgrGAeANsPw" name="ontology" value="40"/>
        <eLiterals xmi:id="_AT-3C7pmEeOLgrGAeANsPw" name="transformation" value="41"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EEnum" xmi:id="_AT-3DLpmEeOLgrGAeANsPw" name="RelationshipCode">
        <eAnnotations xmi:id="_AT-3DbpmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode"/>
        <eLiterals xmi:id="_AT-3DrpmEeOLgrGAeANsPw" name="updates"/>
        <eLiterals xmi:id="_AT-3D7pmEeOLgrGAeANsPw" name="conforms_to" value="1"/>
        <eLiterals xmi:id="_AT-3ELpmEeOLgrGAeANsPw" name="version_of" value="2"/>
        <eLiterals xmi:id="_AT-3EbpmEeOLgrGAeANsPw" name="specializes" value="3"/>
        <eLiterals xmi:id="_AT-3ErpmEeOLgrGAeANsPw" name="generalizes" value="4"/>
        <eLiterals xmi:id="_AT-3E7pmEeOLgrGAeANsPw" name="supersedes" value="5"/>
        <eLiterals xmi:id="_AT-3FLpmEeOLgrGAeANsPw" name="deprecates" value="6"/>
        <eLiterals xmi:id="_AT-3FbpmEeOLgrGAeANsPw" name="adapts" value="7"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_AT-3FrpmEeOLgrGAeANsPw" name="ModelPackageDescriptionRelationship">
        <eAnnotations xmi:id="_AT-3F7pmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship"/>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3GLpmEeOLgrGAeANsPw" name="descriptionText" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_AT-3GrpmEeOLgrGAeANsPw" name="base_Dependency" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/4.0.0/UML#//Dependency"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3HLpmEeOLgrGAeANsPw" name="relationshipCode" ordered="false" lowerBound="1" eType="_AT-3DLpmEeOLgrGAeANsPw" defaultValueLiteral="conforms_to"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_AT-3HrpmEeOLgrGAeANsPw" name="ModelPackageDescription">
        <eAnnotations xmi:id="_AT-3H7pmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
        <eAnnotations xmi:id="_AT-3ILpmEeOLgrGAeANsPw" source="http://www.eclipse.org/emf/2002/GenModel">
          <details xmi:id="_AT-3IbpmEeOLgrGAeANsPw" key="documentation" value="derive: self.mpdBaseURI.repr().concat(self.mpdVersionID.repr()).oclAsType(AnyURI) &#xD;&#xA;self.mpdBaseURI.repr().startsWith('http:/') &#xD;&#xA;Constraints on master document are resolved during PSM-MPD transformation.&#xD;&#xA;Constraint is resolved via PSM-MPD transformations which produce the catalog as&#xA;              specified by the MPD. &#xD;&#xA;Constraints on changelogs are resolved by PSM-MPD transformations.&#xD;&#xA;Packaging constraints are resolved by PSM-MPD transformations.&#xD;&#xA;Constraints on URIs are partially satisfied by specific URI Constraints expressed&#xA;              elsewhere in the NDR and MPD. For URI references embedded elsewhere in the model, it&#xA;              would be difficult to express the constraint in OCL. This constraint must be manually&#xA;              resolved by the modeler. &#xD;&#xA;Packaging constraints are resolved by PSM-MPD transformations.&#xD;&#xA;Constraints on changelogs are resolved by PSM-MPD transformations.&#xD;&#xA;Constraints on changelog are resolved during PSM-MPD transformations.&#xD;&#xA;( self.base_Component.profiledBy('NIEM_PSM_Profile') and&#xA;              (self.mpdClassCode=ModelPackageDescriptionClassCode::iepd) ) implies&#xA;              self.base_Component.elementImport ->exists(elementImport|&#xA;              elementImport.stereotypedBy('ModelPackageDescriptionFile') and (&#xA;              elementImport.getStereotypeApplication('ModelPackageDescriptionFile').purposeURI=&#xA;              'http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#exchange-schema' )&#xA;              and elementImport.importElement.oclAsType(Package).packagedElement&#xA;              ->exists(e|e.stereotypedBy('PropertyHolder') and&#xA;              e.oclAsType(Class).ownedAttribute->notEmpty()) ) &#xD;&#xA;Constraints on master document are resolved by PSM-MPD transformations.&#xD;&#xA;Packaging constraints are resolved by PSM-MPD transformations.&#xD;&#xA;self.mpdVersionID.match('[0-9]+(\\.[0-9]+)*((alpha|beta|rc|rev)[0-9]+)?') &#xD;&#xA;Constraints on packaging are resolved during PSM-MPD transformation.&#xD;&#xA;( self.base_Component.profiledBy('NIEM_PSM_Profile') and (&#xA;              (self.mpdClassCode=ModelPackageDescriptionClassCode::iepd) or&#xA;              (self.mpdClassCode=ModelPackageDescriptionClassCode::eiem) ) ) implies&#xA;              self.base_Component.elementImport&#xA;              ->select(elementImport|elementImport.stereotypedBy('ModelPackageDescriptionFile')).getStereotypeApplication('ModelPackageDescriptionFile').purposeURI&#xA;              ->exists(purposeURI|&#xA;              (purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#subset-schema')&#xA;              or&#xA;              (purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')&#xA;              ) &#xD;&#xA;Explicit URI references are not modelled for well known artifacts such as schemas.&#xA;              Serialization of MPD artifacts such as schemas are via PSM-MPD transformations which&#xA;              construct URI references according to this MPD rule.&#xD;&#xA;Constraints for catalog construction are resolved in PSM-MPD transformations.&#xD;&#xA;This constraint is resolved by PSM-MPD transformations.&#xD;&#xA;This constraint is realized by PSM-MPD transformations.&#xD;&#xA;Constraints on artifact URIs are resolved during PSM-MPD transformations.&#xD;&#xA;Packaging constraints are resolved by PSM-MPD transformations.&#xD;&#xA;This constraint is resolved by a combination of applying all specified NDR-based&#xA;              constraints and transformations to target artifacts.&#xD;&#xA;Packaging constraints are resolved by transformations.&#xD;&#xA;not(self.mpdVersionID.oclIsUndefined()) and (self.mpdVersionID&lt;>'')&#xA;              -- This constraint also satisfied by tag mpdVersionID, which is required to have a&#xA;              value.&#xD;&#xA;Packaging constraints are resolved by PSM-MPD transformations.&#xD;&#xA;All catalog constraints are resolved in PSM-MPD transformation.&#xD;&#xA;Constraints on changelogs are resolved during PSM-MPD transformation.&#xD;&#xA;Satisfaction of this constraint requires comparative analysis between versions;&#xA;              can not be expressed easily in OCL.&#xD;&#xA;An EIEM is an MPD with a packageCode of EIEM. An EIEM is typically bundled as a&#xA;              reusable model library which can be referenced from IEPDs. This relationship between&#xA;              EIEM and IEPD is used by PSM-MPD transformations to construct the catalog entries in&#xA;              resolution of this constraint.&#xD;&#xA;Constraints for catalog construction are resolved in PSM-MPD transformation. &#xD;&#xA;Packaging constraints are resolved by PSM-MPD transformations.&#xD;&#xA;The schemaLocation constraints are resolved during PSM-MPD transformation."/>
        </eAnnotations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_AT-3IrpmEeOLgrGAeANsPw" name="base_Component" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/4.0.0/UML#//Component"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3JLpmEeOLgrGAeANsPw" name="mpdVersionID" ordered="false" lowerBound="1" defaultValueLiteral="1.0">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3JrpmEeOLgrGAeANsPw" name="mpdBaseURI" ordered="false" lowerBound="1" defaultValueLiteral="http://iepd.org/myIEPD/">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3KLpmEeOLgrGAeANsPw" name="mpdClassCode" ordered="false" lowerBound="1" eType="_AT-3SLpmEeOLgrGAeANsPw" defaultValueLiteral="iepd"/>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3KrpmEeOLgrGAeANsPw" name="descriptionText" ordered="false" defaultValueLiteral="An exchange to notify partner agencies to perform contingency operations.">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3LLpmEeOLgrGAeANsPw" name="SecurityMarkingText" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3LrpmEeOLgrGAeANsPw" name="CreationDate" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3MLpmEeOLgrGAeANsPw" name="LastRevsionDate" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3MrpmEeOLgrGAeANsPw" name="NextRevisionDate" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3NLpmEeOLgrGAeANsPw" name="StatusText" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3NrpmEeOLgrGAeANsPw" name="KeywordText" ordered="false" lowerBound="1" upperBound="-1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3OLpmEeOLgrGAeANsPw" name="DomainText" ordered="false" lowerBound="1" upperBound="-1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3OrpmEeOLgrGAeANsPw" name="PurposeText" ordered="false" upperBound="-1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3PLpmEeOLgrGAeANsPw" name="ExchangePatternText" ordered="false" upperBound="-1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3PrpmEeOLgrGAeANsPw" name="ExchangePartnerName" ordered="false" upperBound="-1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3QLpmEeOLgrGAeANsPw" name="ASName" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3QrpmEeOLgrGAeANsPw" name="ASAddressText" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3RLpmEeOLgrGAeANsPw" name="ASWebSiteURL" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_AT-3RrpmEeOLgrGAeANsPw" name="POC" ordered="false" lowerBound="1" upperBound="-1" eType="_AT-2orpmEeOLgrGAeANsPw" containment="true"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EEnum" xmi:id="_AT-3SLpmEeOLgrGAeANsPw" name="ModelPackageDescriptionClassCode">
        <eAnnotations xmi:id="_AT-3SbpmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode"/>
        <eLiterals xmi:id="_AT-3SrpmEeOLgrGAeANsPw" name="eiem"/>
        <eLiterals xmi:id="_AT-3S7pmEeOLgrGAeANsPw" name="iepd" value="1"/>
        <eLiterals xmi:id="_AT-3TLpmEeOLgrGAeANsPw" name="core_update" value="2"/>
        <eLiterals xmi:id="_AT-3TbpmEeOLgrGAeANsPw" name="release" value="3"/>
        <eLiterals xmi:id="_AT-3TrpmEeOLgrGAeANsPw" name="domain_update" value="4"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_AT-3T7pmEeOLgrGAeANsPw" name="ModelPackageDescriptionFileSet">
        <eAnnotations xmi:id="_AT-3ULpmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet"/>
        <eAnnotations xmi:id="_AT-3UbpmEeOLgrGAeANsPw" source="http://www.eclipse.org/emf/2002/GenModel">
          <details xmi:id="_AT-3UrpmEeOLgrGAeANsPw" key="documentation" value="self.base_Package.namespace.stereotypedBy('ModelPackageDescription')"/>
        </eAnnotations>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3U7pmEeOLgrGAeANsPw" name="externalURI" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3VbpmEeOLgrGAeANsPw" name="natureCode" ordered="false" lowerBound="1" eType="_AT-2urpmEeOLgrGAeANsPw" defaultValueLiteral="file_set"/>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3V7pmEeOLgrGAeANsPw" name="purposeCode" ordered="false" lowerBound="1" eType="_AT-24LpmEeOLgrGAeANsPw" defaultValueLiteral="extension_schema_set"/>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3WbpmEeOLgrGAeANsPw" name="descriptionText" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_AT-3W7pmEeOLgrGAeANsPw" name="base_Component" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/4.0.0/UML#//Component"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_AT-3XbpmEeOLgrGAeANsPw" name="ChangeLogType">
        <eAnnotations xmi:id="_AT-3XrpmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeLogType"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_AT-3X7pmEeOLgrGAeANsPw" name="base_Package" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/4.0.0/UML#//Package"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3YbpmEeOLgrGAeANsPw" name="ChangeLogSummaryText" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3Y7pmEeOLgrGAeANsPw" name="ChangeLogSubmitterName" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3ZbpmEeOLgrGAeANsPw" name="ChangeLogApplicationInstructionsText" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_AT-3Z7pmEeOLgrGAeANsPw" name="ChangeInformationType">
        <eAnnotations xmi:id="_AT-3aLpmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_AT-3abpmEeOLgrGAeANsPw" name="base_Package" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/4.0.0/UML#//Package"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3a7pmEeOLgrGAeANsPw" name="ChangeSummaryText" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3bbpmEeOLgrGAeANsPw" name="ChangeReasonText" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3b7pmEeOLgrGAeANsPw" name="ChangeFullDescriptionText" ordered="false">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3cbpmEeOLgrGAeANsPw" name="ChangeNCCTIssueNumber" ordered="false" upperBound="-1">
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
        </eStructuralFeatures>
        <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="_AT-3c7pmEeOLgrGAeANsPw" name="ChangeCode" ordered="false" upperBound="-1" eType="_AT-3dbpmEeOLgrGAeANsPw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EEnum" xmi:id="_AT-3dbpmEeOLgrGAeANsPw" name="ChangeCodeSimpleType">
        <eAnnotations xmi:id="_AT-3drpmEeOLgrGAeANsPw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeCodeSimpleType"/>
        <eLiterals xmi:id="_AT-3d7pmEeOLgrGAeANsPw" name="new_requirement"/>
        <eLiterals xmi:id="_AT-3eLpmEeOLgrGAeANsPw" name="bug_fix" value="1"/>
        <eLiterals xmi:id="_AT-3ebpmEeOLgrGAeANsPw" name="refactoring" value="2"/>
        <eLiterals xmi:id="_AT-3erpmEeOLgrGAeANsPw" name="harmonization" value="3"/>
        <eLiterals xmi:id="_AT-3e7pmEeOLgrGAeANsPw" name="general_improvement" value="4"/>
      </eClassifiers>
    </contents>
  </eAnnotations>
  <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile">
    <body>The Model Package Description Profile comprises stereotypes that are used to mode NIEM
          MPDs. The diagram shows all the stereotypes defined in this profile.</body>
  </ownedComment>
  <packageImport xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packageImport">
    <importedPackage xmi:type="uml:Model" href="pathmap://UML_METAMODELS/UML.metamodel.uml#_0"/>
  </packageImport>
  <packageImport xmi:id="_0primitiveTypesModel_Package_Description_Profile">
    <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
  </packageImport>
  <packageImport xmi:id="_0javaPrimitiveTypesModel_Package_Description_Profile">
    <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#_0"/>
  </packageImport>
  <packagedElement xmi:type="uml:Extension" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1" name="" memberEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1-ownedEnd NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-base_Component" navigableOwnedEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1-ownedEnd">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1-ownedEnd" name="extension_" visibility="private" type="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription" aggregation="composite" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1-ownedEnd-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878336_126608_2246" name="" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType" name="POCType">
    <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-POCType">
      <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
            margin:0px;} &lt;/style> &lt;/head> &lt;body> A set of
            metadata used to contact the authoritative source for an MPD. &lt;/body>
            &lt;/html> &lt;/body> &lt;/html> l> </body>
    </ownedComment>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCTelephone" name="POCTelephone" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCTelephone-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCTelephone">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              telephone number. &lt;/body> &lt;/html> &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878335_427098_2241" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCTelephone-upperValue" name="" value="*"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCName" name="POCName" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCName-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCName">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A name
              for a person, position, or title. &lt;/body> &lt;/html>
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878311_160092_2150" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878311_337307_2151" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCEmail" name="POCEmail" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCEmail-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCEmail">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> An
              email address. &lt;/body> &lt;/html> &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878310_666551_2149" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCEmail-upperValue" name="" value="*"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile" name="ModelPackageDescriptionFile">
    <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
            margin:0px;} &lt;/style> &lt;/head> &lt;body>
            &lt;p> The ModelPackageDescriptionFile stereotype applies to a Usage
            dependency that represents a relationship between an MPD or a file set and an artifact
            (generally a namespace) to be included in the MPD. Reference Sections 4.2.3 and 4.2.4 of
            NIEM MPD Specification v1.0
            (http://reference.niem.gov/niem/specification/model-package-description/1.0/).
            &lt;/p> &lt;/body> &lt;/html>
            l-package-description/1.0/). &lt;/p> &lt;/body>
            &lt;/html> &lt;/html> </body>
    </ownedComment>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-15_" name="NDR [Rule 6-15]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-15_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-15_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-15] (REF, SUB, EXT)&lt;/b>
              Within the schema, any attribute declaration owning the attribute name MUST appear as
              an immediate child of the document element xsd:schema. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> All schema components
              defined by NIEM-conformant schemas are named, accessible from outside the defining
              schema, and reusable across schemas. Local attribute definitions provide named
              attributes that are not reusable outside the context in which they are defined.
              Requiring named NIEM attributes to be top level ensures that they are globally
              reusable. &lt;/p> &lt;/body> &lt;/html> to be top
              level ensures that they are globally reusable. &lt;/p>
              &lt;/body> &lt;/html> /body> &lt;/html>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-15_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-01_" name="MPD [Rule 3-01]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-01_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-01_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 3-1] &lt;/b>Any XML instance that
              validates against a correct NIEM schema subset will always validate against the entire
              NIEM reference schema set from which that subset was created. &lt;/p>
              &lt;p> &lt;/p> &lt;p align=&quot;LEFT&quot;
              style=&quot;margin-bottom:0in;margin-top:0.11in;&quot;> &lt;font face=&quot;Times, serif&quot;
              color=&quot;#000000&quot; size=&quot;2&quot;>This rule should be satisfied as a result of
              redefinition semantics and other constraints&lt;/font>&lt;font
              face=&quot;Times&quot; color=&quot;#000000&quot; size=&quot;2&quot;> associated with
              &lt;&lt;&lt;/font>&lt;a
              href=&quot;mdel://_17_0_2_7b3022e_1312665991957_183350_2567Q&quot;>References&lt;/a>&lt;font
              face=&quot;Times&quot; color=&quot;#000000&quot;
              size=&quot;2&quot;>>>&lt;/font>&lt;font face=&quot;Times, serif&quot;
              color=&quot;#000000&quot; size=&quot;2&quot;>. We require that all type definitions in the
              &lt;/font>&lt;font face=&quot;Times&quot; color=&quot;#000000&quot; size=&quot;2&quot;>subset
              &lt;/font>&lt;font face=&quot;Times, serif&quot; color=&quot;#000000&quot;
              size=&quot;2&quot;>schema are &lt;/font>&lt;font face=&quot;Times&quot;
              color=&quot;#000000&quot; size=&quot;2&quot;>&lt;&lt;&lt;/font>&lt;a
              href=&quot;mdel://_17_0_2_7b3022e_1312665991957_183350_2567Q&quot;>References&lt;/a>&lt;font
              face=&quot;Times&quot; color=&quot;#000000&quot;
              size=&quot;2&quot;>>>&lt;/font>&lt;font face=&quot;Times, serif&quot;
              color=&quot;#000000&quot; size=&quot;2&quot;> &lt;/font>&lt;font face=&quot;Times&quot;
              color=&quot;#000000&quot; size=&quot;2&quot;>to&lt;/font>&lt;font face=&quot;Times,
              serif&quot; color=&quot;#000000&quot; size=&quot;2&quot;> &lt;/font>&lt;font face=&quot;Times&quot;
              color=&quot;#000000&quot; size=&quot;2&quot;>corresponding type definitions in
              the&lt;/font>&lt;font face=&quot;Times, serif&quot; color=&quot;#000000&quot;
              size=&quot;2&quot;> reference schema and that all elements in type definitions are
              redefinitions. &lt;/font> &lt;/p> &lt;/body>
              &lt;/html> ize=&quot;2&quot;> reference schema and that all elements in type
              definitions are redefinitions. &lt;/font> &lt;/p>
              &lt;/body> &lt;/html> > &lt;/body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-01_-specification" name="">
        <language>OCL2.0</language>
        <body>( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and (
              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#subset-schema')
              ) implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
              ->forEach(subsetElement|
              subsetElement.clientDependency->exists(d|d.stereotypedBy('References')) and
              subsetElement.clientDependency->select(d|d.stereotypedBy('References')).supplier
              ->forEach(referenceElement| (subsetElement.name=referenceElement.name) and
              (subsetElement.metaClass()=referenceElement.metaClass()) and(
              subsetElement.oclIsKindOf(Namespace) implies
              subsetElement.oclAstype(Namespace).ownedMember ->forEach(subsetMember|
              referenceElement.oclAstype(Namespace).ownedMember ->exists(referenceMember|
              (subsetMember.name=referenceMember.name) and
              (subsetMember.metaClass()=referenceMember.metaClass()) ) ) ) ) ) </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-45_" name="NDR [Rule 6-45]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-45_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-45_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-45] (REF, SUB, EXT)
              &lt;/b>Within the schema, when a namespace other than the XML namespace or
              the XML Schema namespace is used, its content MUST be valid with respect to the schema
              imported for that namespace. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> XML Schema does not address the
              schema-validity of content used for annotations or attributes on schema components.
              This rule ensures that content used in such a manner is schema-valid. This encourages
              interoperable data definitions and schema documents. &lt;/p>
              &lt;/body> &lt;/html> ages interoperable data definitions and
              schema documents. &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-45_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-07_" name="NDR [Rule 6-07]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-07_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-07_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-7] (REF, SUB, EXT)&lt;/b> The
              schema SHALL NOT reference the type xsd:anyType. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> XML Schema has the concept of the
              &quot;ur-type,&quot; a type that is the root of all other types. This type is realized in
              schemas as xsd:anyType. &lt;/p> &lt;p> NIEM-conformant schemas
              must not use xsd:anyType, because this feature permits the introduction of arbitrary
              content (i.e., untyped and unconstrained data) into an XML instance. NIEM intends that
              the schemas describing that instance describe all constructs within the instance.
              &lt;/p> &lt;/body> &lt;/html> describing that
              instance describe all constructs within the instance. &lt;/p>
              &lt;/body> &lt;/html> > &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-07_-specification" name="">
        <language>English</language>
        <body>This constraint is realized by not defining an xsd:anyType as part of the type
              system.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-59_" name="NDR [Rule 7-59]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-59_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-59_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-59] (REF, SUB, EXT)
              &lt;/b>Within the schema, any two elements of the form &lt;/p>
              &lt;p style=&quot;margin-left:10.0px;&quot;> &lt;i>NCName
              &lt;/i> &lt;/p> &lt;p style=&quot;margin-left:0.0px;&quot;> and
              &lt;/p> &lt;p style=&quot;margin-left:10.0px;&quot;>
              &lt;i>NCNameReference&lt;/i> &lt;/p> &lt;p
              style=&quot;margin-left:0.0px;&quot;> where the string value of NCName is the same in
              both forms, SHALL be defined to have identical semantics. NIEM recognizes no
              difference in meaning between a reference element and an element that is not a
              reference element. &lt;/p> &lt;p style=&quot;margin-left:0.0px;&quot;>
              &lt;b>Rationale&lt;/b> NIEM-conformant data instances may use
              concrete data elements and reference elements as needed, to represent the meaning of
              the fundamental data. There is no difference in meaning between reference and concrete
              data representations. The two different methods are available for ease of
              representation. No difference in meaning should be implied by the use of one method or
              the other. &lt;/p> &lt;p style=&quot;margin-left:0.0px;&quot;> Assertions
              that indicate &quot;included&quot; data is intrinsic, while referenced data is extrinsic, are
              not valid and are not applicable to NIEM-conformant data instances and data
              definitions. &lt;/p> &lt;/body> &lt;/html> quot; data
              is intrinsic, while referenced data is extrinsic, are not valid and are not applicable
              to NIEM-conformant data instances and data definitions. &lt;/p>
              &lt;/body> &lt;/html> > &lt;/body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-59_-specification" name="">
        <language>English</language>
        <body>Definitional.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-25_" name="NDR [Rule 6-25]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-25_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-25_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-25] (REF, SUB, EXT)
              &lt;/b>Within the schema, if the element xsd:sequence carries the attribute
              maxOccurs, it MUST set the value of the attribute to 1. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> XML Schema allows each
              particle to specify cardinality (how many times the particle may appear in an
              instance). NIEM restricts the cardinality of xsd:sequence particles to exactly one, to
              ensure that content model definitions are defined in as straightforward a manner as
              possible. &lt;/p> &lt;/body> &lt;/html> efined in as
              straightforward a manner as possible. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-25_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-12_" name="NDR [Rule 6-12]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-12_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-12_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-12] (REF, SUB, EXT) &lt;/b>The
              schema SHALL NOT contain the element xsd:anyAttribute. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> The xsd:anyAttribute
              element provides a wildcard, where arbitrary attributes may appear. The element
              xsd:anyAttribute may appear within constraint schemas or within other schemas that are
              not NIEM-conformant, but it is prohibited in NIEM-conformant schemas.
              &lt;/p> &lt;/body> &lt;/html> t is prohibited in
              NIEM-conformant schemas. &lt;/p> &lt;/body>
              &lt;/html> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-12_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-15_" name="NDR [Rule 7-15]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-15_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-15_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-15] (REF, EXT) &lt;/b>The schema
              SHALL import the appinfo namespace. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> For uniformity, all NIEM-conformant
              schemas must import the appinfo namespace. &lt;/p> &lt;/body>
              &lt;/html> the appinfo namespace. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-15_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-69_" name="NDR [Rule 7-69]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-69_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-69_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-69] (SUB)&lt;/b> The value of the targetNamespace
              attribute owned by the xsd:schema document element of the subset schema must be the
              same as the value of the targetNamespace attribute owned by the xsd:schema document
              element of the reference schema. &lt;/body> &lt;/html> erence
              schema. &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-69_-specification" name="">
        <language>English</language>
        <body>Constraint resolved by resolution to MPD [Rule 3-4]</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05.1_" name="MPD [Rule 3-05.1]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05.1_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05.1_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 3-5.1]&lt;/b> If a schema in a reference schema set
              has been omitted from a derived subset, then every xsd:import occurrence of that
              schema MUST be removed from all schemas within the subset. &lt;/body>
              &lt;/html> e subset. &lt;/body> &lt;/html> l>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05.1_-specification" name="">
        <language>English</language>
        <body>Constraint on xsd:import is realized by the PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-13_" name="NDR [Rule 7-13]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-13_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-13_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-13] (REF, EXT)&lt;/b> A data
              definition SHALL NOT contain explicit representational or data typing information such
              as number characters, type of characters, etc., unless the very nature of the
              component can be described only by such information. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> A component definition
              is intended to describe semantic meaning only, not representation or structure. How a
              component with simple content is represented is indicated through the representation
              term and further refined through constraints. &lt;/p> &lt;/body>
              &lt;/html> tion term and further refined through constraints.
              &lt;/p> &lt;/body> &lt;/html> body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-13_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-21_" name="NDR [Rule 9-21]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-21_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-21_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 9-21] (REF, SUB, EXT) &lt;/b>Within the schema, the
              name of an element declaration that is of complex content and that does not correspond
              to a concept listed in NDR Table 9-2: Representation Terms MUST NOT use a
              representation term. &lt;/body> &lt;/html> entation term.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-21_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-05_" name="NDR [Rule 6-05]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-05_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-05_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-5] (REF, SUB, EXT)&lt;/b> The
              schema SHALL NOT contain the element xsd:include. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Element xsd:include brings schemas
              defined in separate files into the current namespace. It breaks a namespace up into
              arbitrary partial schemas, which needlessly complicates the schema structure, making
              it harder to reuse and process, and also increases the likelihood of conflicting
              definitions. &lt;/p> &lt;p> Inclusion of schemas that do not
              have namespaces also complicates schema understanding. This inclusion makes it
              difficult to find the realization of a specific schema artifact and create aliases for
              schema components that should be reused. Inclusion of schemas also violates [Principle
              8], as it uses multiple schemas to construct a namespace. &lt;/p>
              &lt;/body> &lt;/html> mas also violates [Principle 8], as it
              uses multiple schemas to construct a namespace. &lt;/p>
              &lt;/body> &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-05_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-03_" name="MPD [Rule 3-03]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-03_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-03_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 3-3]&lt;/b> NIEM subset schemas may omit all
              xsd:annotation elements that are in the NIEM reference schema from which it is
              derived. &lt;/body> &lt;/html> ved. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-03_-specification" name="">
        <language>English</language>
        <body>Constraint satisfied by other documentedComponent rules which exclude subset
              schemas.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-34_" name="NDR [Rule 7-34]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-34_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-34_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-34] (REF, EXT)&lt;/b> Within the schema, an
              element appinfo:ReferenceTarget that does not carry an attribute appinfo:namespace
              SHALL refer to the target namespace of the schema in which it is used.
              &lt;/body> &lt;/html> is used. &lt;/body>
              &lt;/html> ml> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-34_-specification" name="">
        <language>English</language>
        <body>Constraint resolved by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-16_" name="NDR [Rule 6-16]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-16_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-16_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-16] (REF, EXT) &lt;/b>The schema
              SHALL NOT contain any of the elements xsd:unique, xsd:key, xsd:keyref, xsd:selector,
              or xsd:field. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> XML Schema provides NIEM with the ability
              to apply uniqueness constraints to schema-validated content. These mechanisms,
              however, establish relationships in a way that is very difficult to understand,
              extend, and keep consisent through schema reuse. These elements may be used in subset
              schemas and constraint schemas. &lt;/p> &lt;/body>
              &lt;/html> be used in subset schemas and constraint schemas.
              &lt;/p> &lt;/body> &lt;/html> &lt;/html>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-16_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-24_" name="NDR [Rule 6-24]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-24_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-24_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-24] (REF, SUB, EXT)&lt;/b> Within the schema, if
              the element xsd:sequence carries the attribute minOccurs, it MUST set the value for
              the attribute to 1. &lt;/body> &lt;/html> ute to 1.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-24_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-70_" name="NDR [Rule 7-70]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-70_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-70_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-70] (SUB) &lt;/b>The schema must
              be constructed such that any instance that is XML Schema valid against the schema must
              also be XML Schema valid against the base schema. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> A subset schema is a briefer, abridged
              form of its base schema. The subset schema is intended to stand in the place of the
              base schema for the purpose of XML Schema validation in many situations. As such, it
              is imperative that the subset schema sustain the constraints expressed by the base
              schema. The NDR does not specify what mechanisms a subset schema must use to support
              the constraints of the base schema. &lt;/p> &lt;/body>
              &lt;/html> t schema must use to support the constraints of the base schema.
              &lt;/p> &lt;/body> &lt;/html> &lt;/html>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-70_-specification" name="">
        <language>English</language>
        <body>Constraint resolved by resolution to MPD [Rule 3-1]</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-30_" name="NDR [Rule 7-30]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-30_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-30_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-30] (REF, EXT)&lt;/b> Within the
              schema, the element appinfo:ReferenceTarget SHALL identify the XML Schema type
              definition of an element information item to which an instance of a reference element
              may validly refer. The element appinfo:ReferenceTarget SHALL NOT be used for any other
              purpose. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> This describes the meaning of a reference
              target. The term type definition is as used in
              &lt;b>[XMLSchemaStructures]&lt;/b>, in the PSVI
              (post-schema-validation infoset) definition for an element information item. The
              element appinfo:ReferenceTarget is required to express the type of referenced content.
              XML Schema does not provide this level of type safety. &lt;/p>
              &lt;/body> &lt;/html> erenced content. XML Schema does not
              provide this level of type safety. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-30_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-17_" name="NDR [Rule 6-17]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-17_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-17_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-17] (REF, SUB, EXT)&lt;/b> The
              schema SHALL NOT contain the element xsd:all. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> The element xsd:all provides a set of
              particles (e.g., elements) that may be included in an instance, in no particular
              order. This can greatly complicate processing and may be difficult to comprehend and
              satisfy. &lt;/p> &lt;/body> &lt;/html> difficult to
              comprehend and satisfy. &lt;/p> &lt;/body> &lt;/html>
              body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-17_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-41_" name="NDR [Rule 6-41]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-41_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-41_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-41] (REF, SUB, EXT)&lt;/b>
              Within the schema, the element xsd:import MUST carry the attribute schemaLocation.
              &lt;/p> &lt;p> &lt;b>Rationale&lt;/b> An
              import that does not specify a schema location gives no clue to processing
              applications as to where to find an implementation of the namespace. Even though such
              a provided schema location may be overridden, it is important that an initial default
              be provided for processing. &lt;/p> &lt;/body>
              &lt;/html> initial default be provided for processing. &lt;/p>
              &lt;/body> &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-41_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-01_" name="NDR [Rule 6-01]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-01_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-01_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-1] (REF, SUB, EXT) &lt;/b>Within the schema, an
              element xsd:complexType SHALL NOT own the attribute mixed with the value true.
              &lt;/body> &lt;/html> rue. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-01_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-04_" name="MPD [Rule 3-04]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-04_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-04_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 3-4] &lt;/b>Each schema in a schema subset derived
              from a schema reference set bears the same (target) namespace as the schema in the
              reference set on which it is based. &lt;/body> &lt;/html> is
              based. &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-04_-specification" name="">
        <language>OCL2.0</language>
        <body>self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#subset-schema'
              implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
              ->exists(element| element.clientDependency
              ->select(d|d.stereotypedBy('References')).supplier.getNearestPackage()
              ->select(r|r.stereotypedBy('Namespace')).getStereotypeApplication('Namespace').targetNamespace=
              element.owner.getStereotypeApplication('Namespace').targetNamespace ) ) </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-05_" name="NDR [Rule 7-05]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-05_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-05_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-5] (REF, EXT)&lt;/b> Within the schema, any
              element xsd:simpleType MUST be a documented component. &lt;/body>
              &lt;/html> ent. &lt;/body> &lt;/html> l>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-05_-specification" name="">
        <language>OCL2.0</language>
        <body>( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (
              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
              or (
              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')
              ) ) implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
              ->select(c|c.oclIsKindOf(DataType)).oclAsType(DataType)
              ->forAll(simpleType |
              simpleType.ownedComment->exists(documentation|documentation.stereotypedBy('Documentation')))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-42_" name="NDR [Rule 6-42]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-42_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-42_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-42] (REF, SUB, EXT)&lt;/b>
              Within the schema, the value of the required attribute schemaLocation carried by the
              element xsd:import MUST match either the production &lt;absolute-URI> or
              the definition of &quot;relative-path reference,&quot; as defined by
              &lt;b>[RFC3986]&lt;/b>. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> The default value may be specified either
              as absolute or relative URIs. Since URNs are not resolvable, they are inappropriate
              for use in schemaLocation. The requirement for conformance to &quot;relative-path
              reference&quot; is required to avoid the more obscure syntax of &quot;network-path reference&quot;
              and the system-specific &quot;absolute-path reference.&quot; &lt;/p>
              &lt;/body> &lt;/html> ot; and the system-specific &quot;absolute-path
              reference.&quot; &lt;/p> &lt;/body> &lt;/html>
              body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-42_-specification" name="">
        <language>English</language>
        <body>This constraint is superceded by MPD [Rule 6-4]. Implementation of MPD [Rule 6-4]
              resolves this constraint. </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-04_" name="NDR [Rule 7-04]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-04_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-04_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-4] (REF, EXT) &lt;/b>Within the
              schema, any element xsd:complexType MUST be a documented component. &lt;/p>
              &lt;p> Note that MPD [Rule 3-3] relaxes this requirement for subset
              schemas. &lt;/p> &lt;/body> &lt;/html> nt for subset
              schemas. &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-04_-specification" name="">
        <language>OCL2.0</language>
        <body>( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (
              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
              or (
              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')
              ) ) implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
              ->select(c|c.oclIsKindOf(Class) and
              not(c.stereotypedBy('PropertyHolder'))).oclAsType(Class) ->forAll(complexType |
              complexType.ownedComment->exists(documentation|documentation.stereotypedBy('Documentation'))) </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-4_" name="NDR [Rule 9-4]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-4_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-4_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 9-4] (REF, SUB, EXT) &lt;/b>The
              hyphen character ('-') MAY appear in component names only when used as a separator
              between parts of a single word, phrase, or value, which would otherwise be
              incomprehensible without the use of a separator. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Names of standards and specifications, in
              particular, tend to consist of series of discrete numbers. Such names require some
              explicit separator to keep the values from running together. The separator used within
              NIEM is the hyphen. &lt;/p> &lt;/body> &lt;/html>
              her. The separator used within NIEM is the hyphen. &lt;/p>
              &lt;/body> &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-4_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-59_" name="NDR [Rule 6-59]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-59_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-59_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-59] (REF, SUB, EXT)
              &lt;/b>Within the schema, the attribute ref owned by any element
              xsd:attributeGroup MUST have a value of a qualified name (possibly using the default
              namespace) that SHALL resolve to the namespace for the NIEM structures namespace and
              the local name SimpleObjectAttributeGroup. &lt;/p> &lt;p>
              &lt;b>[Rationale] &lt;/b>The only attribute group used within
              NIEM-conformant schemas is structures:SimpleObjectAttributeGroup. Therefore, within a
              NIEM-conformant schema, only this attribute group can be referenced.
              &lt;/p> &lt;/body> &lt;/html> mant schema, only this
              attribute group can be referenced. &lt;/p> &lt;/body>
              &lt;/html> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-59_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-1_" name="NDR [Rule 5-1]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-1_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-1_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 5-1] (REF, SUB, EXT, CON)&lt;/b>
              The schema MUST conform to XML as specified by&lt;b>
              [XML]&lt;/b>. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> XML is a well-known, commonly used W3C
              Recommendation. It is supported by a large number of commercial and open-source
              software tools. It is a simple, well-defined, semi-structured data format that is
              flexible enough to allow for easy extension. XML works with many other powerful
              associated technologies such as XML Schema, XSLT, and XPath. Artifacts of NIEM conform
              to the most recent recommendation for XML. &lt;/p> &lt;/body>
              &lt;/html> f NIEM conform to the most recent recommendation for XML.
              &lt;/p> &lt;/body> &lt;/html> &lt;/html>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-1_-specification" name="">
        <language>English</language>
        <body>This constraint is realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-08_" name="MPD [Rule 3-08]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-08_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-08_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 3-8] &lt;/b>A constraint schema bears a target
              namespace that has been previously assigned by a reference schema, extension schema,
              or exchange schema, or is a schema that is intended to support a constraint schema
              that has such a target namespace. &lt;/body> &lt;/html> get
              namespace. &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-08_-specification" name="">
        <language>English</language>
        <body>Constraint schemas are not modeled with the NIEM Profile. This constraint is not
              applied.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-39_" name="NDR [Rule 6-39]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-39_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-39_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-39] (REF, SUB, EXT)&lt;/b> Within the schema, the
              element xsd:import MUST carry the attribute namespace. &lt;/body>
              &lt;/html> ace. &lt;/body> &lt;/html> l>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-39_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-02_" name="NDR [Rule 6-02]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-02_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-02_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-2] (REF, SUB, EXT)&lt;/b> Within
              the schema, an element declaration that is of complex content SHALL NOT own the
              attribute mixed with the value true. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Mixed content allows the mixing of data
              tags with text. Languages such as XHTML use this syntax for markup of text.
              NIEM-conformant schemas define XML that is for data exchange, not text markup. Mixed
              content creates complexity in processing, defining, and constraining content.
              &lt;/p> &lt;p> Well-defined markup languages exist outside NIEM
              and may be used with NIEM data. External schemas may include mixed content and may be
              used with NIEM. However, mixed content must not be defined by NIEM-conformant schemas
              in keeping with [Principle 9]. &lt;/p> &lt;/body>
              &lt;/html> content must not be defined by NIEM-conformant schemas in
              keeping with [Principle 9]. &lt;/p> &lt;/body>
              &lt;/html> /body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-02_-specification" name="">
        <language>English</language>
        <body>This constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-54_" name="NDR [Rule 7-54]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-54_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-54_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-54] (REF, EXT) &lt;/b>The schema
              MUST import the NIEM structures namespace. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> For uniformity, all NIEM-conformant
              schemas must import the structures namespace. &lt;/p> &lt;/body>
              &lt;/html> the structures namespace. &lt;/p>
              &lt;/body> &lt;/html> y> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-54_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-9_" name="NDR [Rule 9-9]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-9_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-9_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 9-9] (REF, SUB, EXT)&lt;/b> A noun used as a term in
              the name of an XML Schema component MUST be in singular form unless the concept itself
              is plural. &lt;/body> &lt;/html> plural. &lt;/body>
              &lt;/html> tml> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-9_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-51_" name="NDR [Rule 6-51]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-51_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-51_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-51] (REF, EXT)&lt;/b> Within the
              schema, an element in the XML Schema namespace MUST NOT occur as a descendant of any
              element xsd:appinfo. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> NIEM-conformant schemas are designed to
              be very easily processed. Although uses of XML Schema elements as content of
              xsd:appinfo elements could be contrived, it is not current practice and could
              seriously complicate the authoring of schema validators and processors, such as XSLT,
              which may evaluate XML elements by their namespaces and names. Forbidding the use of
              XML Schema elements outside valid uses of schema will simplify such processing.
              &lt;/p> &lt;/body> &lt;/html> ents outside valid uses
              of schema will simplify such processing. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-51_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-13_" name="NDR [Rule 9-13]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-13_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-13_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 9-13] (REF, SUB, EXT) &lt;/b>The
              object-class term of a NIEM component SHALL consist of a term identifying a category
              of concrete concepts or entities. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> The object-class term indicates the
              object category that this data component describes or represents. This term provides
              valuable context and narrows the scope of the component to an actual class of things
              or concepts. &lt;/p> &lt;/body> &lt;/html> t to an
              actual class of things or concepts. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-13_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-20_" name="NDR [Rule 7-20]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-20_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-20_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-20] (REF, EXT) &lt;/b>Within the schema, an
              element appinfo:Base that does not own an attribute appinfo:namespace SHALL refer to
              the target namespace of the schema in which it is used. &lt;/body>
              &lt;/html> is used. &lt;/body> &lt;/html> ml>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-20_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-04_" name="NDR [Rule 6-04]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-04_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-04_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-4] (REF, SUB, EXT) &lt;/b>The
              schema SHALL NOT contain the element xsd:notation. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> XML Schema notations
              allow the attachment of system and public identifiers on fields of data. The notation
              mechanism does not play a part in validation of instances and is not supported by
              NIEM. &lt;/p> &lt;/body> &lt;/html> tances and is not
              supported by NIEM. &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-04_-specification" name="">
        <language>English</language>
        <body>Constrained realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-18_" name="NDR [Rule 9-18]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-18_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-18_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 9-18] (REF, EXT)&lt;/b> If any
              word in the representation term is redundant with any word in the property term, one
              occurrence SHOULD be deleted. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> This rule, carried over from 11179, is
              designed to prevent repeating terms unnecessarily within component names. For example,
              this rule allows designers to avoid naming an element &quot;PersonFirstNameName.&quot;
              &lt;/p> &lt;/body> &lt;/html> an element
              &quot;PersonFirstNameName.&quot; &lt;/p> &lt;/body> &lt;/html>
              body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-18_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-14_" name="NDR [Rule 9-14]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-14_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-14_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 9-14] (REF, SUB, EXT)&lt;/b> A
              property term SHALL describe or represent a characteristic or subpart of an entity or
              concept. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> The property term describes the central
              meaning of the data component. &lt;/p> &lt;/body>
              &lt;/html> of the data component. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-14_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-21_" name="NDR [Rule 6-21]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-21_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-21_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-21] (EXT)&lt;/b> Within the schema, any immediate
              child of a model group xsd:choice element MUST be one of xsd:annotation or
              xsd:element. &lt;/body> &lt;/html> ent. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-21_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-11_" name="NDR [Rule 9-11]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-11_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-11_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 9-11] (REF, SUB, EXT)&lt;/b>
              Articles, conjunctions, and prepositions SHALL NOT be used in NIEM component names
              except where they are required for clarity or by standard convention.
              &lt;/p> &lt;p> &lt;b>Rationale&lt;/b>
              Articles (e.g., a, an, the), conjunctions (e.g., and, or, but), and prepositions
              (e.g., at, by, for, from, in, of, to) are all disallowed in NIEM component names,
              unless they are required. For example, PowerOfAttorneyCode requires the preposition.
              These rules constrain slight variations in word forms and types to improve consistency
              and reduce potentially ambiguous or confusing component names. &lt;/p>
              &lt;/body> &lt;/html> y and reduce potentially ambiguous or
              confusing component names. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-11_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-18_" name="NDR [Rule 7-18]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-18_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-18_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-18] (REF, EXT) &lt;/b>Within the
              schema, the element appinfo:Base SHALL indicate, by namespace and name, one of the
              following: &lt;/p> &lt;p> 1. A NIEM-conformant schema component.
              &lt;/p> &lt;p> 2. structures:Object. &lt;/p>
              &lt;p> 3. structures:Association. &lt;/p> &lt;/body>
              &lt;/html> . &lt;/p> &lt;p> 3.
              structures:Association. &lt;/p> &lt;/body> &lt;/html>
              p> &lt;/body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-18_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-12_" name="NDR [Rule 7-12]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-12_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-12_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-12] (REF, EXT)&lt;/b> An object
              class SHALL NOT be redefined within the definitions of the components that represent
              properties or subparts of that entity or class. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Data definitions should be concise,
              precise, and unambiguous without embedding additional definitions of data elements
              that have already been defined once elsewhere (such as object classes).
              &lt;b>[ISO 11179 Part 4] &lt;/b>says that definitions should not
              be nested inside other definitions. Furthermore, a data dictionary is not a language
              dictionary. It is acceptable to reuse terms (object class, property term, and
              qualifier terms) from a component name within its corresponding definition to enhance
              clarity, as long as the requirements and recommendations of &lt;b>[ISO
              11179 Part 4]&lt;/b> are not violated. This further enhances brevity and
              precision. &lt;/p> &lt;/body> &lt;/html> [ISO 11179
              Part 4]&lt;/b> are not violated. This further enhances brevity and
              precision. &lt;/p> &lt;/body> &lt;/html> body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-12_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformation.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-20_" name="NDR [Rule 6-20]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-20_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-20_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-20] (EXT)&lt;/b> Within the schema, any immediate
              child of a model group xsd:sequence element MUST be one of xsd:annotation,
              xsd:element, xsd:choice, or xsd:any. &lt;/body> &lt;/html>
              xsd:any. &lt;/body> &lt;/html> ml> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-20_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-62_" name="NDR [Rule 7-62]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-62_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-62_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-62] (REF, EXT)&lt;/b> Within the
              schema, an element xsd:import that imports a namespace defined by an external schema
              MUST be a documented component. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> A NIEM-conformant schema has well-known
              documentation points. Therefore, a schema that imports a NIEM-conformant namespace
              need not provide additional documentation. However, when an external schema is
              imported, appropriate documentation must be provided at the point of import because
              documentation associated with external schemas is undefined and variable. In this
              particular case, documentation of external schemas is required at their point of use
              in NIEM. &lt;/p> &lt;/body> &lt;/html> n of external
              schemas is required at their point of use in NIEM. &lt;/p>
              &lt;/body> &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-62_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-MPD transformations, based on required documentation
              for modeled external schema.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-11_" name="NDR [Rule 7-11]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-11_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-11_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-11] (REF, EXT)&lt;/b> An object class SHALL have
              one and only one associated semantic meaning (i.e., a single word sense) as described
              in the definition of the component that represents that object class.
              &lt;/body> &lt;/html> ct class. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-11_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-06_" name="NDR [Rule 6-06]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-06_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-06_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-6] (REF, SUB, EXT)&lt;/b> The
              schema SHALL NOT contain the element xsd:redefine. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> The xsd:redefine
              element allows an XML Schema document to restrict and extend components from a
              namespace, in that very namespace. Such redefinition introduces duplication of
              definitions, allowing multiple definitions to exist for components from a single
              namespace. This violates [Principle 8] that a single reference schema defines a
              NIEM-conformant namespace. &lt;/p> &lt;/body>
              &lt;/html> erence schema defines a NIEM-conformant namespace.
              &lt;/p> &lt;/body> &lt;/html> body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-06_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-16_" name="NDR [Rule 7-16]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-16_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-16_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-16] (REF, EXT)&lt;/b> A
              component that is deprecated SHALL be indicated as such by the component having
              application information appinfo:Deprecated, with an attribute value with a value of
              true. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Deprecation can allow version management
              to be more consistent; versions of schema may be incrementally improved without
              introducing validation problems and incompatibility. As XML Schema lacks a deprecation
              mechanism, NIEM defines such a mechanism. &lt;/p> &lt;/body>
              &lt;/html> recation mechanism, NIEM defines such a mechanism.
              &lt;/p> &lt;/body> &lt;/html> &lt;/html>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-16_-specification" name="">
        <language>English</language>
        <body>Deprecated indicator not currently in NIEM Profiles, no constraint specified.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-56_" name="NDR [Rule 6-56]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-56_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-56_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-56] (REF, SUB, EXT)&lt;/b>
              Within the schema, given an element xsd:complexContent with a child xsd:extension
              owning an attribute base, the attribute base MUST have a value that resolves to the
              name of one of the following: &lt;/p> &lt;p> 1. The type
              structures:ComplexObjectType. &lt;/p> &lt;p> 2. The type
              structures:MetadataType. &lt;/p> &lt;p> 3. The type
              structures:AugmentationType. &lt;/p> &lt;p> 4. A complex type
              that is a NIEM-conformant component. &lt;/p> &lt;p>
              &lt;b>[Rationale]&lt;/b> This rule ensures that a CCC has
              well-defined ancestry. In turn, this ensures that every CCC has well-defined
              semantics. &lt;/p> &lt;/body> &lt;/html> CCC has
              well-defined ancestry. In turn, this ensures that every CCC has well-defined
              semantics. &lt;/p> &lt;/body> &lt;/html> p>
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-56_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-47_" name="NDR [Rule 6-47]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-47_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-47_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-47] (REF, EXT)&lt;/b> Within the
              schema, the content of the xsd:documentation element that constitutes the data
              definition of a component MUST be character information items as specified by
              &lt;b>[XMLInfoSet]&lt;/b>. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> According to the XML Schema
              specification, the content of xsd:documentation elements is intended for human
              consumption, whereas other structured XML content is intended for machine consumption.
              Therefore, the xsd:documentation element MUST NOT contain structured XML data. As
              such, any XML content appearing within a documentation element is in the context of
              human-targeted examples and should be escaped using &lt; and >. This rule
              also prohibits comments within documentation elements. &lt;/p>
              &lt;p> See &lt;b>[SchemaForXMLSchema]&lt;/b>, the
              schema for XML Schema, as an example of documentation elements containing properly
              escaped XML elements. &lt;/p> &lt;/body> &lt;/html>
              XML Schema, as an example of documentation elements containing properly escaped XML
              elements. &lt;/p> &lt;/body> &lt;/html> >
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-47_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-3_" name="NDR [Rule 5-3]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-3_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-3_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 5-3] (REF, SUB, EXT, CON)
              &lt;/b>The schema MUST conform to the W3C XML Schema Recommendations: XML
              Schema Part 1: Structures and XML Schema Part 2: Datatypes, as specified by
              &lt;b>[XMLSchemaStructures]&lt;/b> and
              &lt;b>[XMLSchemaDatatypes]&lt;/b>. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> XML Schema has become
              the generally accepted schema language and is experiencing the most widespread
              adoption. Although other schema languages exist that offer their own advantages and
              disadvantages, the current approach is to base NIEM on XML Schema. &lt;/p>
              &lt;/body> &lt;/html> ages, the current approach is to base NIEM
              on XML Schema. &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-3_-specification" name="">
        <language>English</language>
        <body>This constraint is realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-31_" name="NDR [Rule 6-31]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-31_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-31_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-31] (REF, SUB) &lt;/b>Within the schema, if an
              element declaration carries the attribute final, it MUST set the value for the
              attribute to the empty string. &lt;/body> &lt;/html> y string.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-31_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-53_" name="NDR [Rule 7-53]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-53_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-53_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-53] (REF, SUB, EXT)&lt;/b> Any
              attribute declaration referenced by a component within the schema MUST be from one of
              the following: &lt;/p> &lt;p> 1. The schema being defined.
              &lt;/p> &lt;p> 2. A namespace imported as NIEM-conformant.
              &lt;/p> &lt;p> 3. The structures namespace. &lt;/p>
              &lt;p> 4. The XML namespace. &lt;/p> &lt;p> 5. An
              external namespace, in accordance with the rules for external schemas as specified by
              this specification. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> NIEM-conformant schemas are based on
              other NIEM-conformant schemas. All attributes and elements must be from
              NIEM-conformant schemas, the structures namespace, the XML namespace, or an external
              namespace. This applies to elements referenced for substitution groups as well. It
              does not apply to content of the schema (e.g., within annotations) or to the XML
              Schema declarations themselves. It applies only to attributes and elements referenced
              by the XML Schema components. &lt;/p> &lt;/body>
              &lt;/html> otations) or to the XML Schema declarations themselves. It
              applies only to attributes and elements referenced by the XML Schema components.
              &lt;/p> &lt;/body> &lt;/html> >
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-53_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-55_" name="NDR [Rule 7-55]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-55_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-55_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-55] (REF, SUB, EXT, INS)&lt;/b>
              The schema or instance MUST use content within the NIEM structures namespace as
              specified in the NDR document and ONLY as specified by the NDR document.
              &lt;/p> &lt;p> &lt;b>Rationale&lt;/b> This
              rule further enforces uniformity and consistency by mandating use of the NIEM
              structures namespace as is, without modification. Users are not allowed to insert
              types, attributes, etc. that are not specified by this document (the NDR).
              &lt;/p> &lt;/body> &lt;/html> that are not specified
              by this document (the NDR). &lt;/p> &lt;/body>
              &lt;/html> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-55_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-01_" name="NDR [Rule 7-01]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-01_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-01_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-1] (REF, EXT)&lt;/b> Within the
              schema, the document element xsd:schema MUST have application information
              appinfo:ConformantIndicator, with text content &quot;true&quot;. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> The
              appinfo:ConformantIndicator element is how NIEM-conformant schemas indicate that they
              are, in fact, NIEM-conformant. Without such an indicator, conformance would have to be
              &quot;guessed&quot; by readers and processors. &lt;/p> &lt;/body>
              &lt;/html> &quot;guessed&quot; by readers and processors. &lt;/p>
              &lt;/body> &lt;/html> y> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-01_-specification" name="">
        <language>OCL2.0</language>
        <body>self.base_ElementImport.profiledBy('NIEM_PSM_Profile') implies ( (
              (self.natureURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
              or
              (self.natureURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')
              ) implies self.importedElement.getStereotypeApplication('Namespace').isConformant ) </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-20_" name="NDR [Rule 9-20]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-20_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-20_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 9-20] (REF, SUB, EXT) &lt;/b>Within the schema, the
              name of an element declaration that is of complex content, and that corresponds to a
              concept listed in NDR Table 9-2: Representation Terms, MUST use a representation term
              from that table. &lt;/body> &lt;/html> om that table.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-20_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-30_" name="NDR [Rule 9-30]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-30_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-30_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 9-30] (REF, SUB, EXT)&lt;/b>
              Within the schema, the name of any attribute group definition schema component SHALL
              use the representation term AttributeGroup. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> This clearly identifies attribute groups
              and partitions their names from the names of other types of schema components.
              &lt;/p> &lt;/body> &lt;/html> of other types of
              schema components. &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-30_-specification" name="">
        <language>English</language>
        <body>The only Attribute Group allowed in NIEM is the
              structures:SimpleObjectAttributeGroup. The constraint is realized by PSM-XSD
              transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-17_" name="NDR [Rule 9-17]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-17_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-17_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 9-17] (REF, SUB, EXT) &lt;/b>The
              order of qualifiers SHALL NOT be used to differentiate names. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> Very large vocabularies
              may have many similar and closely related properties and concepts. The use of object,
              property, and representation terms alone is often not sufficient to construct
              meaningful names that can uniquely distinguish such components. Qualifier terms
              provide additional context to resolve these subtleties. However, swapping the order of
              qualifiers rarely (if ever) changes meaning; qualifier ordering is no substitute for
              meaningful terms. &lt;/p> &lt;/body> &lt;/html>
              aning; qualifier ordering is no substitute for meaningful terms. &lt;/p>
              &lt;/body> &lt;/html> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-17_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-31_" name="NDR [Rule 7-31]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-31_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-31_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-31] (REF, EXT) &lt;/b>Within the
              schema, a reference element MUST have at most one instance of the element
              appinfo:ReferenceTarget. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Content elements in XML Schema may have
              at most one type. This rule ensures that reference elements follow the same pattern.
              &lt;/p> &lt;/body> &lt;/html> ents follow the same
              pattern. &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-31_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-16_" name="NDR [Rule 9-16]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-16_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-16_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 9-16] (REF, SUB, EXT)&lt;/b> The number of qualifier
              terms SHOULD be limited to the absolute minimum required to make the component name
              unique and understandable. &lt;/body> &lt;/html> tandable.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-16_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-51_" name="NDR [Rule 7-51]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-51_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-51_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-51] (REF, SUB, EXT) &lt;/b>Any
              type definition referenced by a component within the schema MUST be from one of the
              following: &lt;/p> &lt;p> 1. The schema being defined.
              &lt;/p> &lt;p> 2. A namespace imported as NIEM-conformant.
              &lt;/p> &lt;p> 3. The XML Schema namespace. &lt;/p>
              &lt;p> 4. The structures namespace. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> NIEM-conformant schemas are based on
              other NIEM-conformant schemas and the supporting namespaces. This simplifies
              processing and understanding of data. &lt;/p> &lt;/body>
              &lt;/html> emas and the supporting namespaces. This simplifies processing
              and understanding of data. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-51_-specification" name="">
        <language>English</language>
        <body>Constraint resolved by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-19_" name="NDR [Rule 6-19]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-19_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-19_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-19] (REF, SUB) &lt;/b>Within the schema, any
              immediate child of a model group xsd:sequence element MUST be one of xsd:annotation or
              xsd:element &lt;/body> &lt;/html> d:element
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-19_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-12_" name="NDR [Rule 9-12]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-12_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-12_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 9-12] (REF, SUB, EXT)&lt;/b>
              Except as specified elsewhere in this document, any element or attribute defined
              within the schema SHALL have a name that takes the form: &lt;/p>
              &lt;p> � Object-class qualifier terms (0 or more). &lt;/p>
              &lt;p> � An object class term (1). &lt;/p> &lt;p> �
              Property qualifier terms (0 or more). &lt;/p> &lt;p> � A
              property term (1). &lt;/p> &lt;p> � Representation qualifier
              terms (0 or more). &lt;/p> &lt;p> � A representation term (1).
              &lt;/p> &lt;p> &lt;b>Rationale&lt;/b>
              Consistent naming rules are helpful for users who wish to understand components with
              which they are unfamiliar, as well as for users to find components with known
              semantics. This rule establishes the basic structure for an element or attribute name,
              in line with the rules for names under &lt;b>[ISO 11179 Part
              5]&lt;/b>. Note that many elements with complex type should not have a
              representation term. &lt;/p> &lt;/body> &lt;/html> e
              with the rules for names under &lt;b>[ISO 11179 Part 5]&lt;/b>.
              Note that many elements with complex type should not have a representation term.
              &lt;/p> &lt;/body> &lt;/html> >
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-12_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-13_" name="NDR [Rule 6-13]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-13_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-13_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-13] (REF, SUB, EXT)
              &lt;/b>Within the schema, any occurrence of the element xsd:complexType or
              xsd:simpleType MUST appear as an immediate child of the element xsd:schema.
              &lt;/p> &lt;p> &lt;b>Rationale&lt;/b> NIEM
              does not support anonymous types in NIEM-conformant schemas. All XML Schema
              &quot;top-level&quot; types (children of the document element) are required by XML Schema to be
              named. By requiring NIEM type definitions to be top level, they are forced to be named
              and are therefore globally reusable. &lt;/p> &lt;/body>
              &lt;/html> d to be named and are therefore globally reusable.
              &lt;/p> &lt;/body> &lt;/html> body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-13_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-17_" name="NDR [Rule 7-17]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-17_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-17_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-17] (REF, EXT) &lt;/b>Within the
              schema, the element appinfo:Base MAY be used in one of the following ways:
              &lt;/p> &lt;p> 1. By a type definition, to indicate the base
              type, or structures:Object or structures:Association. &lt;/p>
              &lt;p> 2. By an element declaration, to indicate the base element.
              &lt;/p> &lt;p> The element appinfo:Base SHALL NOT be used for
              any other purpose. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> The appinfo:Base element is required to
              clarify semantics of types as object or association types, when such derivation is not
              otherwise derivable from the component definitions. &lt;/p>
              &lt;/body> &lt;/html> , when such derivation is not otherwise
              derivable from the component definitions. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-17_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-14_" name="NDR [Rule 6-14]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-14_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-14_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-14] (REF, SUB, EXT)&lt;/b>
              Within the schema, any element declaration carrying the attribute name MUST appear as
              an immediate child of the document element xsd:schema. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> All schema components
              defined by NIEM-conformant schemas must be named, accessible from outside the defining
              schema, and reusable across schemas. Local element definitions provide named elements
              that are not reusable outside the context in which they are defined. Requiring named
              NIEM elements to be top level ensures that they are globally reusable.
              &lt;/p> &lt;/body> &lt;/html> to be top level ensures
              that they are globally reusable. &lt;/p> &lt;/body>
              &lt;/html> /body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-14_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-35_" name="NDR [Rule 7-35]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-35_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-35_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-35] (REF, EXT)&lt;/b> Within the
              schema, an element appinfo:ReferenceTarget SHALL carry an attribute appinfo:name. The
              value of this attribute SHALL indicate the local name of a type definition schema
              component within the namespace specified by the element. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> Together, this set of
              rules establishes the element appinfo:ReferenceTarget as a reference to a
              NIEM-conformant type definition schema component that a reference element instance may
              reference. &lt;/p> &lt;/body> &lt;/html> t that a
              reference element instance may reference. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-35_-specification" name="">
        <language>English</language>
        <body>Constraint resolved by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-54_" name="NDR [Rule 6-54]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-54_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-54_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-54] (REF, SUB, EXT)&lt;/b>
              Within the schema, given an element xsd:simpleContent with a child xsd:extension
              owning an attribute base, if the attribute base has a value that resolves to the name
              of a simple type, then the element xsd:extension MUST have an immediate child element
              xsd:attributeGroup. &lt;/p> &lt;p>
              &lt;b>[Rationale]&lt;/b> This rule ensures that a CSC that is
              created as an immediate extension of a simple type adds the attributes required for
              specific NIEM linking mechanisms. The attribute group is required to be
              structures:SimpleObjectAttributeGroup by NDR [Rule 6-59]. &lt;/p>
              &lt;/body> &lt;/html> structures:SimpleObjectAttributeGroup by
              NDR [Rule 6-59]. &lt;/p> &lt;/body> &lt;/html>
              body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-54_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-27_" name="NDR [Rule 6-27]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-27_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-27_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-27] (REF, EXT)&lt;/b> Within the schema, if a
              complex type definition carries the attribute block, it MUST set the value for the
              attribute to the empty string. &lt;/body> &lt;/html> y string.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-27_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-15_" name="NDR [Rule 9-15]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-15_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-15_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 9-15] (REF, SUB, EXT) &lt;/b>Multiple qualifier
              terms MAY be used within a component name as necessary to ensure clarity and
              uniqueness within its namespace and usage context. &lt;/body>
              &lt;/html> context. &lt;/body> &lt;/html> ml>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-15_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-52_" name="NDR [Rule 7-52]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-52_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-52_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-52] (REF, SUB, EXT)&lt;/b> Any
              element declaration referenced by a component within the schema MUST be from one of
              the following: &lt;/p> &lt;p> 1. The schema being defined.
              &lt;/p> &lt;p> 2. A namespace imported as NIEM-conformant.
              &lt;/p> &lt;p> 3. The structures namespace. &lt;/p>
              &lt;p> 4. An external namespace, in accordance with the rules for external
              schemas as specified by this specification. &lt;/p> &lt;/body>
              &lt;/html> the rules for external schemas as specified by this
              specification. &lt;/p> &lt;/body> &lt;/html>
              /body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-52_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-8_" name="NDR [Rule 9-8]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-8_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-8_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 9-8] (REF, SUB, EXT) &lt;/b>The
              schema MUST consistently use approved acronyms, abbreviations, and word truncations
              within defined names. The approved shortened forms are defined in Table 9-1 of the
              NDR: Abbreviations Used in NIEM Core Names . &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Consistent, controlled, and documented
              abridged terms that are used frequently and/or tend to be lengthy can support
              readability, clarity, and reduction of name length. &lt;/p>
              &lt;/body> &lt;/html> eadability, clarity, and reduction of name
              length. &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-8_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-2_" name="NDR [Rule 5-2]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-2_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-2_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 5-2] (REF, SUB, EXT, CON)
              &lt;/b>The schema MUST conform to the specification for namespaces in XML,
              as defined by &lt;b>[XMLNamespaces]&lt;/b> and
              &lt;b>[XMLNamespacesErrata]&lt;/b>. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> NIEM is designed to
              facilitate cross-domain data exchanges and interoperability. The ultimate scope of
              NIEM is anticipated to be quite large. The primary purpose of namespaces is to avoid
              naming conflicts, which for NIEM could become quite common, since NIEM stakeholders
              and IEPD developers define and name many of their own data components independently.
              Therefore, in NIEM, XML namespaces are employed both to avoid name clashes and to
              provide a level of independence to participating domains. &lt;/p>
              &lt;/body> &lt;/html> lashes and to provide a level of
              independence to participating domains. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-2_-specification" name="">
        <language>English</language>
        <body>This constraint is realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-32_" name="NDR [Rule 6-32]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-32_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-32_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-32] (REF, SUB, EXT)&lt;/b>
              Within the schema, if the document element xsd:schema carries the attribute
              finalDefault, it MUST set the value for that attribute to the empty string.
              &lt;/p> &lt;p> &lt;b>Rationale&lt;/b>
              Restriction of derivation options reduces capacity for reuse and so is forbidden
              within reference and subset schemas. As well, the use of finalDefault complicates
              understanding of schemas, so it is only allowed in constraint schemas.
              &lt;/p> &lt;/body> &lt;/html> o it is only allowed in
              constraint schemas. &lt;/p> &lt;/body> &lt;/html>
              body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-32_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05_" name="MPD [Rule 3-05]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 3-5]&lt;/b> A schema contained in
              a reference schema set may be omitted from a derived subset, if and only if ALL of the
              following conditions are true within that schema: &lt;/p> &lt;p>
              � No elements/attributes declared or types defined in the schema are required for
              business exchange purposes. AND &lt;/p> &lt;p> � No
              elements/attributes declared or types defined in the schema are required to support
              other elements or types within the subset for exchange purposes; in other words, no
              references to elements or types in the schema exist in any other schema of the subset.
              &lt;/p> &lt;/body> &lt;/html> s or types in the
              schema exist in any other schema of the subset. &lt;/p>
              &lt;/body> &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05_-specification" name="">
        <language>English</language>
        <body>UML well-formedness rules and semantics realize the constraint for referential
              integrity. </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-38_" name="NDR [Rule 7-38]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-38_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-38_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-38] (REF, SUB, EXT)
              &lt;/b>Within the schema, an element MUST NOT be introduced more than once
              into the direct content of a type definition. This applies to content acquired through
              extension of base types. This does not apply to a base element or derived element to
              one previously existing in the type definition. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> This rule ensures that sequences of
              elements are simple sequences. A type should not define, for example, a sequence of
              elements A, B, then A again. Definitions should define, instead, what elements may be
              included, and their cardinality. Specific orders should be expressed in instances,
              when necessary, by the use of the attribute structures:sequenceID. &lt;/p>
              &lt;/body> &lt;/html> ces, when necessary, by the use of the
              attribute structures:sequenceID. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-38_-specification" name="">
        <language>English</language>
        <body>Constraint is resolved by PSM-XSD transformations. Constraint also addressed by
              UML Property order and naming constraints.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-03_" name="NDR [Rule 6-03]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-03_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-03_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-3] (REF, SUB, EXT) &lt;/b>The schema SHALL NOT
              contain a reference to the type definition xsd:NOTATION or to a type derived from that
              type. &lt;/body> &lt;/html> ype. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-03_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-06_" name="NDR [Rule 7-06]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-06_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-06_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-6] (REF, EXT) &lt;/b>Within the schema, any
              element xsd:element that is an immediate child of an element xsd:schema MUST be a
              documented component. &lt;/body> &lt;/html> omponent.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-06_-specification" name="">
        <language>OCL2.0</language>
        <body>( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (
              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
              or (
              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')
              ) ) implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
              ->select(c|c.oclIsKindOf(Classifier)).oclAsType(Classifier).attribute
              ->select(p|p.stereotypeApplication('XSDProperty').kind=XSDPropertyKindCode::element)
              ->forAll(attribute |
              attribute.ownedComment->exists(documentation|documentation.stereotypedBy('Documentation'))) </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-39_" name="NDR [Rule 7-39]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-39_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-39_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-39] (REF, EXT)&lt;/b> Within the
              schema, an object type SHALL be a complex type definition that either constitutes a
              NIEM-conformant component or for which there exists a NIEM-conformant component of one
              of the following forms: &lt;/p> &lt;p> 1. Has simple content, is
              based on a simple type, and contains the attribute group
              structures:SimpleObjectAttributeGroup, and has application information appinfo:Base of
              structures:Object. &lt;/p> &lt;p> 2. Has complex content, and is
              based on complex type structures:ComplexObjectType, and has application information
              appinfo:Base of structures:Object. &lt;/p> &lt;p> 3. Is a
              complex type that is derived from an object type, which is defined according to this
              rule. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Object types are at the core of NIEM.
              They are built in a uniform way, from a simple design pattern: they take one of the
              two &quot;root&quot; forms outlined above, or they are built from other object types, depending
              on whether they are of simple or complex content. &lt;/p>
              &lt;/body> &lt;/html> quot; forms outlined above, or they are
              built from other object types, depending on whether they are of simple or complex
              content. &lt;/p> &lt;/body> &lt;/html> body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-39_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-23_" name="NDR [Rule 7-23]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-23_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-23_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-23] (REF, EXT)&lt;/b> Within the
              schema, if an element appinfo:Base indicates the structures namespace, then the value
              of the attribute appinfo:name owned by the element appinfo:Base SHALL have a value of
              one of the following: &lt;/p> &lt;p> 1. structures:Object.
              &lt;/p> &lt;p> 2. structures:Association. &lt;/p>
              &lt;p> 3. A schema component defined by the structures schema.
              &lt;/p> &lt;p> &lt;b>Rationale&lt;/b>
              Together, this set of rules establishes the element appinfo:Base as a reference to
              either a NIEM-conformant schema component or to a special NIEM component, which acts
              as the base for the containing schema component. &lt;/p>
              &lt;/body> &lt;/html> or to a special NIEM component, which acts
              as the base for the containing schema component. &lt;/p>
              &lt;/body> &lt;/html> &lt;/body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-23_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-48_" name="NDR [Rule 6-48]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-48_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-48_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-48] (REF, SUB, EXT)&lt;/b> XML
              comments SHALL not be used for persistent information about constructs within the
              schema. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Since XML comments are not associated
              with any specific XML Schema construct, there is no standard way to interpret
              comments. As such, comments should be reserved for internal use, and XML Schema
              annotations should be preferred for meaningful information about components. NIEM
              specifically defines how information should be encapsulated in NIEM-conformant schemas
              via xsd:annotation elements. &lt;/p> &lt;/body>
              &lt;/html> d in NIEM-conformant schemas via xsd:annotation elements.
              &lt;/p> &lt;/body> &lt;/html> &lt;/html>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-48_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-40_" name="NDR [Rule 6-40]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-40_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-40_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-40] (REF, SUB, EXT)
              &lt;/b>Within the schema, the value of the required attribute namespace
              owned by the element xsd:import MUST match the production &lt;absolute-URI>
              as defined by &lt;b>[RFC3986]&lt;/b>. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> An import that does not
              specify a namespace is enabling reference to non-namespaced components. NIEM requires
              that all components have a defined namespace. It is important that the namespace
              declared by a schema be universally defined and unambiguous. Use of the standard XML
              Base for processing is not specified by XML Schema; thus it is not supported here.
              &lt;/p> &lt;/body> &lt;/html> t specified by XML
              Schema; thus it is not supported here. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-40_-specification" name="">
        <language>English</language>
        <body>Since imports are derived (and not modeled), the namespace for an import is the
              same as the targetNamespace modeled for the referenced schema, and the implementation
              of NDR [Rule 6-36] resolves this constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-49_" name="NDR [Rule 6-49]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-49_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-49_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-49] (REF, EXT)&lt;/b> Within the
              schema, any immediate child of an xsd:appinfo element SHALL be an element information
              item or a comment information item. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Application information elements are
              intended for automatic processing; thus they should contain machine-oriented data,
              XML. &lt;/p> &lt;/body> &lt;/html> contain
              machine-oriented data, XML. &lt;/p> &lt;/body>
              &lt;/html> /body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-49_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-36_" name="NDR [Rule 7-36]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-36_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-36_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-36] (REF, SUB, EXT)&lt;/b>
              Within the schema, a simple type definition that uses xsd:list SHOULD NOT be defined
              if any member of the list requires a property or metadata that is different than other
              members of the list. All members of the list SHOULD have the same metadata, and should
              be related via the same properties. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> The members of a list are not
              individually addressable by NIEM metadata techniques. The members are also not
              individually addressable by properties; a property has a value of all the members of
              the list. NIEM provides no method for individually addressing a member of a list. If
              an individual member of a list needs to be marked up in a manner different than other
              members of the list, the use of individual elements may be preferred to the definition
              of a list simple type. &lt;/p> &lt;/body> &lt;/html>
              individual elements may be preferred to the definition of a list simple type.
              &lt;/p> &lt;/body> &lt;/html> /body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-36_-specification" name="">
        <language>English</language>
        <body>Definitional.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-5_" name="NDR [Rule 5-5]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-5_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-5_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 5-5] (REF, SUB, EXT)&lt;/b> A NIEM
              component name SHALL be formed by applying the informative guidelines and examples
              detailed in Annex A of &lt;b>[ISO 11179 Part 5]&lt;/b>, with
              exceptions as specified in the NDR document, most notably those specified in Section
              9, Naming Rules. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> The guidelines and examples of
              &lt;b>[ISO 11179 Part 5]&lt;/b> provide a simple, consistent
              syntax for data names that captures context and thereby imparts a reasonable degree of
              semantic precision. &lt;/p> &lt;/body> &lt;/html>
              imparts a reasonable degree of semantic precision. &lt;/p>
              &lt;/body> &lt;/html> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-5_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-33_" name="NDR [Rule 6-33]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-33_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-33_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-33] (REF, SUB, EXT, CON)&lt;/b> Within the schema,
              any element xsd:element SHALL NOT carry the attribute default. &lt;/body>
              &lt;/html> ult. &lt;/body> &lt;/html> l>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-33_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-23_" name="NDR [Rule 6-23]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-23_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-23_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-23] (REF, SUB, EXT) &lt;/b>The
              schema SHALL NOT contain the element xsd:group. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> NIEM does not allow groups of elements to
              be named other than as named complex types. A group in XML Schema creates a named
              entity that may be included in multiple types, and which consists of a sequence of or
              choice between element particles. The NIEM has not developed a semantic model for
              these components, and they are not integrated into NIEM's design. &lt;/p>
              &lt;/body> &lt;/html> s, and they are not integrated into NIEM's
              design. &lt;/p> &lt;/body> &lt;/html> body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-23_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-4_" name="NDR [Rule 5-4]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-4_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-4_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 5-4] (REF, EXT)&lt;/b> Within a
              NIEM-conformant schema, the data definition provided for each documented component
              SHALL follow the requirements and recommendations for data definitions given by
              &lt;b>[ISO 11179 Part 4]&lt;/b>. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> To advance the goal of
              creating semantically rich NIEM-conformant schemas, it is necessary that data
              definitions be descriptive, meaningful, and precise. &lt;b>[ISO 11179 Part
              4]&lt;/b> provides standard structure and rules for defining data
              definitions. NIEM uses this standard for component definitions. &lt;/p>
              &lt;/body> &lt;/html> tions. NIEM uses this standard for
              component definitions. &lt;/p> &lt;/body> &lt;/html>
              body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-4_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-19_" name="NDR [Rule 7-19]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-19_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-19_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-19] (REF, EXT)&lt;/b> Within the
              schema, an attribute appinfo:namespace owned by an element appinfo:Base SHALL have a
              value of either of the following: &lt;/p> &lt;p> 1. A namespace
              which is the target namespace of a NIEM-conformant schema. &lt;/p>
              &lt;p> 2. The structures namespace. &lt;/p>
              &lt;/body> &lt;/html> &lt;p> 2. The structures
              namespace. &lt;/p> &lt;/body> &lt;/html>
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-19_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-30_" name="NDR [Rule 6-30]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-30_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-30_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-30] (REF, SUB) &lt;/b>Within the schema, if a
              complex type definition carries the attribute final, it MUST set the value for the
              attribute to the empty string. &lt;/body> &lt;/html> y string.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-30_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-61_" name="NDR [Rule 7-61]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-61_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-61_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-61] (REF, EXT)&lt;/b> Within the
              schema, an element xsd:import that imports a namespace defined by an external schema
              MUST have the application information appinfo:ConformantIndicator, with a value of
              false. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Knowledge of the conformance of an
              imported schema allows processors to understand the semantics of referenced
              components, without additional processing. Namespaces imported into NIEM-conformant
              schemas are assumed to be conformant unless otherwise indicated. &lt;/p>
              &lt;/body> &lt;/html> are assumed to be conformant unless
              otherwise indicated. &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-61_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-MPD transformations, based on isConformant tag for
              referenced (external) schema.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-21_" name="NDR [Rule 7-21]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-21_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-21_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-21] (REF, EXT)&lt;/b> Within the schema, an
              element appinfo:Base SHALL own an attribute appinfo:name. &lt;/body>
              &lt;/html> ame. &lt;/body> &lt;/html> l>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-21_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-09_" name="NDR [Rule 6-09]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-09_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-09_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-9] (REF, SUB, EXT)&lt;/b> Within
              the schema, an element declaration with the attribute name and without the attribute
              type MUST carry the attribute abstract with the value true. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> Untyped element
              declarations act as wildcards that may carry arbitrary data. By declaring such types
              abstract, NIEM allows the creation of type independent semantics without allowing
              arbitrary content to appear in XML instances. &lt;/p> &lt;/body>
              &lt;/html> bitrary content to appear in XML instances. &lt;/p>
              &lt;/body> &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-09_-specification" name="">
        <language>English</language>
        <body>Constraint is realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-08_" name="NDR [Rule 7-08]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-08_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-08_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-8] (REF, EXT)&lt;/b> Within the schema, any
              element xsd:enumeration MUST be a documented component. &lt;/body>
              &lt;/html> ent. &lt;/body> &lt;/html> l>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-08_-specification" name="">
        <language>OCL2.0</language>
        <body>( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (
              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
              or (
              self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')
              ) ) implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
              ->select(c|c.oclIsKindOf(Enumeration)).oclAsType(Enumeration).ownedLiteral
              ->forAll(literal |
              literal.ownedComment->exists(documentation|documentation.stereotypedBy('Documentation'))) </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-60_" name="NDR [Rule 7-60]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-60_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-60_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-60] (REF, EXT) &lt;/b>Within the
              schema, if both elements NCName and NCNameReference exist, then the
              appinfo:ReferenceTarget of any NCNameReference element MUST be the type of the element
              NCName. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> By [Rule 7-59], any such pair of
              elements, NCName and NCNameReference, will have identical semantics. This rule ensures
              that an NCNameReference element is documented to refer to the appropriate type (the
              type of the corresponding NCName element) and no other. &lt;/p>
              &lt;/body> &lt;/html> of the corresponding NCName element) and
              no other. &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-60_-specification" name="">
        <language>English</language>
        <body>A Reference is modeled as a non-aggregate Property. A given property (from a
              referenced PropertyHolder) may be redefined to be an aggregate (i.e., containment)
              Property. The naming and type constraints are realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-10_" name="NDR [Rule 9-10]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-10_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-10_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 9-10] (REF, SUB, EXT) &lt;/b>A verb used as a term
              in the name of an XML Schema component MUST be used in the present tense unless the
              concept itself is past tense. &lt;/body> &lt;/html> st tense.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-10_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-58_" name="NDR [Rule 6-58]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-58_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-58_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-58] (REF, SUB, EXT)&lt;/b>
              Within the schema, any occurrence of the element xsd:attributeGroup MUST own an
              attribute ref. &lt;/p> &lt;p>
              &lt;b>[Rationale]&lt;/b> The only attribute group used in
              NIEM-conformant schemas is structures:SimpleObjectAttributeGroup, as established by
              rules [Rule 6-59] and [Rule 7-39]. Therefore, NIEM-conformant schemas do not define
              additional attribute groups. &lt;/p> &lt;/body>
              &lt;/html> not define additional attribute groups. &lt;/p>
              &lt;/body> &lt;/html> y> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-58_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-57_" name="NDR [Rule 7-57]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-57_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-57_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-57] (REF, SUB, EXT)
              &lt;/b>Within the schema, a reference element and only a reference element
              SHALL be defined to be of type structures:ReferenceType. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> Reference elements must
              be of the reference type, and elements of the reference type must be reference
              elements. This rule ensures that users always create reference elements using
              structures:ReferenceType and cannot use structures:ReferenceType for any other
              purpose. &lt;/p> &lt;/body> &lt;/html> se
              structures:ReferenceType for any other purpose. &lt;/p>
              &lt;/body> &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-57_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-10_" name="NDR [Rule 7-10]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-10_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-10_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-10] (REF, EXT)&lt;/b> Words or synonyms for the
              words within a data element definition SHALL NOT be reused as terms in the
              corresponding component name if those words dilute the semantics and understanding of,
              or impart ambiguity to, the entity or concept that the component represents.
              &lt;/body> &lt;/html> nt represents. &lt;/body>
              &lt;/html> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-10_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-44_" name="NDR [Rule 6-44]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-44_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-44_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-44] (REF, SUB, EXT)
              &lt;/b>Within the schema, when a namespace other than the XML namespace or
              the XML Schema namespace is used, it MUST be imported into the schema using the
              xsd:import element. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> This rule ensures that used namespaces
              have recognizable defining sources and that they will cooperate with existing tools.
              &lt;/p> &lt;/body> &lt;/html> will cooperate with
              existing tools. &lt;/p> &lt;/body> &lt;/html>
              /body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-44_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-22_" name="NDR [Rule 6-22]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-22_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-22_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-22] (EXT) &lt;/b>The use of
              xsd:choice SHALL define syntax, structure, grouping, and cardinality of instances, but
              SHALL NOT define semantics. The semantics of a property within an xsd:choice SHALL be
              identical to the semantics of the property within an xsd:sequence. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> XML Schema provides the
              capability for model groups to be recursively defined. This means that a sequence may
              contain a sequence, and a choice may contain a choice. These rules are designed to
              keep content models simple, comprehensive, and reusable: The content of an element
              should boil down to a simple list of elements, defined in as straightforward a manner
              as is possible to meet requirements. &lt;/p> &lt;/body>
              &lt;/html> as straightforward a manner as is possible to meet requirements.
              &lt;/p> &lt;/body> &lt;/html> body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-22_-specification" name="">
        <language>English</language>
        <body>Definitional.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-29_" name="NDR [Rule 6-29]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-29_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-29_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-29] (REF, SUB) &lt;/b>Within the schema, if a
              simple type definition carries the attribute final, it MUST set the value for the
              attribute to the empty string. &lt;/body> &lt;/html> y string.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-29_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-50_" name="NDR [Rule 6-50]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-50_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-50_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-50] (REF, EXT) &lt;/b>Within the
              schema, any element that is an immediate child of an xsd:appinfo element SHALL be in a
              namespace. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> Use of default namespace is allowed, but
              content has to have a real namespace, and namespaces must be declared. The XML
              namespaces specification includes the concept of content not in a namespace.
              Non-namespaced data runs counter to the principle of distinctly identifiable data
              definitions. &lt;/p> &lt;/body> &lt;/html> f
              distinctly identifiable data definitions. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-50_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-03_" name="NDR [Rule 7-03]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-03_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-03_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-3] (REF, SUB, EXT, CON)
              &lt;/b>Two XML Schema documents SHALL have the same value for attribute
              targetNamespace carried by the element xsd:schema, and different values for attribute
              version carried by the element xsd:schema if and only if they are different views of
              the same set of components. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> These rules embody the basic philosophy
              behind NIEM's use of namespaced components: A component is uniquely identified by its
              class (e.g. element, attribute, type), its namespace (a URI), and its local name (an
              unqualified string). Any two matching component identifiers refer to the same
              component, even if the versions of the schemas containing each are different.
              &lt;/p> &lt;/body> &lt;/html> ent, even if the
              versions of the schemas containing each are different. &lt;/p>
              &lt;/body> &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-03_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-2_" name="NDR [Rule 9-2]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-2_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-2_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 9-2] (REF, SUB, EXT) &lt;/b>The
              name of any XML Schema component defined by the schema SHALL be composed of words from
              the English language, using the prevalent U.S. spelling, as provided by
              &lt;b>[OED]&lt;/b>. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> The English language has many spelling
              variations for the same word. For example, American English �program� has a
              corresponding British spelling �programme.� This variation has the potential to cause
              interoperability problems when XML components are exchanged because of the different
              names used by the same elements. Providing users with a dictionary standard for
              spelling will mitigate this potential interoperability issue. &lt;/p>
              &lt;/body> &lt;/html> or spelling will mitigate this potential
              interoperability issue. &lt;/p> &lt;/body> &lt;/html>
              body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-2_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-22_" name="NDR [Rule 7-22]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-22_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-22_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-22] (REF, EXT)&lt;/b> Within the schema, if an
              element appinfo:Base indicates a NIEM-conformant namespace, then the value of the
              attribute appinfo:name owned by the element appinfo:Base SHALL indicate a schema
              component in the indicated namespace. &lt;/body> &lt;/html> ted
              namespace. &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-22_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-34_" name="NDR [Rule 6-34]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-34_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-34_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-34] (REF, SUB, EXT, CON)
              &lt;/b>Within the schema, any element xsd:attribute SHALL NOT carry the
              attribute default. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> The use of default values means that the
              act of validating a schema will insert a value into an XML instance where none existed
              prior to schema validation. Schema validation is for rejection of invalid instances,
              not for modifying instance content, as specified in [Principle 4]. &lt;/p>
              &lt;/body> &lt;/html> nce content, as specified in [Principle
              4]. &lt;/p> &lt;/body> &lt;/html> body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-34_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-33_" name="NDR [Rule 7-33]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-33_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-33_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-33] (REF, EXT) &lt;/b>Within the schema, an
              attribute appinfo:namespace carried by an element appinfo:ReferenceTarget SHALL
              indicate the namespace of the referenced schema component. The indicated namespace
              SHALL be defined by a reference or extension schema. &lt;/body>
              &lt;/html> ension schema. &lt;/body> &lt;/html>
              l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-33_-specification" name="">
        <language>English</language>
        <body>Constraint resolved by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-43_" name="NDR [Rule 6-43]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-43_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-43_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-43] (REF, SUB, EXT) &lt;/b>Within the schema, the
              value of the required attribute schemaLocation carried by the element xsd:import MUST
              be resolvable to a XML schema document file that is valid according to
              &lt;b>[XMLSchemaStructures]&lt;/b> and
              &lt;b>[XMLSchemaDatatypes]&lt;/b>. &lt;/body>
              &lt;/html> atatypes]&lt;/b>. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-43_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-07_" name="MPD [Rule 3-07]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-07_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-07_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 3-7]&lt;/b> An IEPD exchange schema MUST NOT declare
              any XML element that is not intended for use as an IEP root element.
              &lt;/body> &lt;/html> ent. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-07_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-26_" name="NDR [Rule 6-26]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-26_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-26_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-26] (REF, EXT)&lt;/b> Within the schema, if an
              element declaration carries the attribute block, it MUST set the value for the
              attribute to the empty string. &lt;/body> &lt;/html> y string.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-26_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-46_" name="NDR [Rule 6-46]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-46_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-46_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-46] (REF, EXT) &lt;/b>Within the
              schema, an element SHALL have at most one instance of an element xsd:annotation as an
              immediate child. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> XML Schema allows annotations to be added
              to components in a fairly loose manner: there may be multiple annotations, each of
              which may have multiple documentation or appinfo elements. This flexibility in the
              syntax provides no additional expressivity but does complicate processing, so it is
              forbidden in NIEM. &lt;/p> &lt;/body> &lt;/html>
              complicate processing, so it is forbidden in NIEM. &lt;/p>
              &lt;/body> &lt;/html> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-46_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-58_" name="NDR [Rule 7-58]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-58_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-58_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-58] (REF, SUB, EXT)&lt;/b>
              Within the schema, a complex type SHALL NOT be defined such that an instance of that
              type owns the attribute structures:ref. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> The use of references is limited to
              reference elements. This constrains the semantics and syntax of references within NIEM
              instances. Only structures:ReferenceType may use structures:ref, which is the only
              means for referencing within NIEM-conformant instances. &lt;/p>
              &lt;/body> &lt;/html> for referencing within NIEM-conformant
              instances. &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-58_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-56_" name="NDR [Rule 7-56]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-56_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-56_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 7-56] (REF, SUB, EXT)&lt;/b>
              Within the schema, a complex type definition SHALL include the attribute
              structures:sequenceID if the order of an occurrence of the type, within its parent,
              relative to its siblings, is meaningful and pertinent and if the schema does not
              specify the desired sequential order. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> This rule indicates that, if order is
              meaningful and the schema will not always represent the desired order, then data
              modelers need to include sequenceID to allow the proper order to be represented in
              instances. &lt;/p> &lt;/body> &lt;/html> to allow the
              proper order to be represented in instances. &lt;/p> &lt;/body>
              &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-56_-specification" name="">
        <language>English</language>
        <body>(Constraint not enforced by this model).</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-32_" name="NDR [Rule 7-32]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-32_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-32_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-32] (REF, EXT) &lt;/b>Within the schema, the
              element appinfo:ReferenceTarget SHALL indicate a type definition schema component, by
              namespace and name. &lt;/body> &lt;/html> and name.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-32_-specification" name="">
        <language>English</language>
        <body>Constraint resolved by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-7_" name="NDR [Rule 9-7]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-7_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-7_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 9-7] (REF, SUB, EXT)&lt;/b> The
              name of any XML Schema component defined by the schema SHALL use the camel case
              formatting convention. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> The foregoing rules establish
              lowerCamelCase for all NIEM components that are XML attributes and UpperCamelCase for
              all NIEM components that are types, elements, or groups. &lt;/p>
              &lt;/body> &lt;/html> that are types, elements, or groups.
              &lt;/p> &lt;/body> &lt;/html> &lt;/html>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-7_-specification" name="">
        <language>English</language>
        <body>Non-computable constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-28_" name="NDR [Rule 6-28]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-28_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-28_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-28] (REF, SUB, EXT)&lt;/b>
              Within the schema, if the document element xsd:schema carries the attribute
              blockDefault, it MUST set the value for the attribute to the empty string.
              &lt;/p> &lt;p> &lt;b>Rationale&lt;/b>
              Restriction of substitution options reduces capacity for reuse; thus, it is forbidden
              within NIEM-conformant schemas In particular, setting the block value at the schema
              level complicates understanding of component definitions. &lt;/p>
              &lt;/body> &lt;/html> tes understanding of component
              definitions. &lt;/p> &lt;/body> &lt;/html>
              body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-28_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-52_" name="NDR [Rule 6-52]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-52_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-52_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-52] (REF, SUB, EXT)
              &lt;/b>Within the schema, the element xsd:complexType MUST have as an
              immediate child either the element xsd:complexContent or the element
              xsd:simpleContent. &lt;/p> &lt;p>
              &lt;b>Rationale&lt;/b> XML Schema provides shorthand to defining
              complex content of a complex type, which is to define the complex type with immediate
              children that specify elements, or other groups, and attributes. In the desire to
              normalize schema representation of types and to be explicit, NIEM forbids the use of
              that shorthand. &lt;/p> &lt;/body> &lt;/html> d to be
              explicit, NIEM forbids the use of that shorthand. &lt;/p>
              &lt;/body> &lt;/html> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-52_-specification" name="">
        <language>English</language>
        <body>Constraint realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-02_" name="NDR [Rule 7-02]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-02_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-02_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 7-2] (REF, SUB, EXT, CON)&lt;/b> Two XML Schema
              documents SHALL have the same value for attribute targetNamespace carried by the
              element xsd:schema, if and only if they represent the same set of components.
              &lt;/body> &lt;/html> mponents. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-02_-specification" name="">
        <language>English</language>
        <body>Not computable.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-08_" name="NDR [Rule 6-08]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-08_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-08_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-8] (REF, SUB, EXT)&lt;/b> The
              schema SHALL NOT reference the type xsd:anySimpleType. &lt;/p>
              &lt;p> &lt;b>Rationale&lt;/b> XML Schema provides a
              restriction of the �ur-type,� which contains only simple content. This provides a
              wildcard for arbitrary text. It is realized in XML Schema as xsd:anySimpleType.
              NIEM-conformant schemas must not use xsd:anySimpleType because this feature is
              insufficiently constrained to provide a meaningful starting point for content
              definitions. Instead, content should be based on one of the more specifically defined
              simple types defined by XML Schema. &lt;/p> &lt;/body>
              &lt;/html> he more specifically defined simple types defined by XML Schema.
              &lt;/p> &lt;/body> &lt;/html> &lt;/html>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-08_-specification" name="">
        <language>English</language>
        <body>Constraint is realized by PSM-XSD transformations.</body>
      </specification>
    </ownedRule>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-externalURI" name="externalURI" visibility="public">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-externalURI-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-externalURI">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> An external URI for the file; indicates a same-as relationship to a
              copy of the file. Implemented as the value of the externalURI attribute of the File
              element in the catalog instance. &lt;/p> &lt;/body>
              &lt;/html> alURI attribute of the File element in the catalog instance.
              &lt;/p> &lt;/body> &lt;/html> he catalog instance.
              &lt;/p> &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-externalURI-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878332_644550_2226" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-relativePathName" name="relativePathName" visibility="public">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-relativePathName-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-relativePathName">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> The relative path name to the file within the MPD directory
              structure. Implemented as the value of the relativePathName attribute of the File
              element in the catalog instance. &lt;/p> &lt;/body>
              &lt;/html> ute of the File element in the catalog instance.
              &lt;/p> &lt;/body> &lt;/html> catalog instance.
              &lt;/p> &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878341_830421_2263" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878341_246265_2264" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-natureCode" name="natureCode" visibility="public" type="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-natureCode-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-natureCode">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> The nature (type) of the file. Implemented as the value of the
              natureURI attribute of the File element in the catalog instance. &lt;/p>
              &lt;/body> &lt;/html> ement in the catalog instance.
              &lt;/p> &lt;/body> &lt;/html> e. &lt;/p>
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878332_422004_2227" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878332_546301_2228" name="" value="1"/>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-natureCode-defaultValue" name="" instance="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xsd"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-purposeCode" name="purposeCode" visibility="public" type="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-purposeCode-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-purposeCode">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> The purpose for or function of the file. Implemented as the value of
              the purposeURI attribute of the File element in the catalog instance.
              &lt;/p> &lt;/body> &lt;/html> element in the catalog
              instance. &lt;/p> &lt;/body> &lt;/html> tance.
              &lt;/p> &lt;/body> &lt;/html> </body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878315_370369_2162" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878315_299010_2163" name="" value="1"/>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-purposeCode-defaultValue" name="" instance="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-extension_schema"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-descriptionText" name="descriptionText" visibility="public">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-descriptionText-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-descriptionText">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> A description of the file. Implemented as the value of the
              descriptionText attribute of the File element in the catalog instance.
              &lt;/p> &lt;/body> &lt;/html> element in the catalog
              instance. &lt;/p> &lt;/body> &lt;/html> tance.
              &lt;/p> &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-descriptionText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878321_272764_2185" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-base_Usage" name="base_Usage" visibility="private" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878328_20321_2211" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878329_20763_2212" name="" value="1"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Enumeration" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode" name="RelationshipCode">
    <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode">
      <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
            margin:0px;} &lt;/style> &lt;/head> &lt;body>
            &lt;p> The possible reasons for the connectedness between the MPDs or between
            an MPD and a resource. This enumeration defines the possible values for the
            relationshipCode attribute of the ModelPackageDescriptionRelationship stereotype. [Note
            these NIEM-UML enumeration literals differ from the NIEM MPD Specification v1.0 in that
            they use underscore (&quot;_&quot;) instead of dash (&quot;-&quot;). This is due to issues with dashes in
            some UML tools.] Reference Section 4.2.5 and Appendix B of NIEM MPD Specification v1.0
            (http://reference.niem.gov/niem/specification/model-package-description/1.0/).
            &lt;/p> &lt;p>   &lt;/p> &lt;/body>
            &lt;/html> ication/model-package-description/1.0/). &lt;/p>
            &lt;p>   &lt;/p> &lt;/body> &lt;/html>
            p> &lt;/body> &lt;/html> </body>
    </ownedComment>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-updates" name="updates">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-updates-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-updates">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              relationshipCode value for indicating that this MPD is an incremental update to the
              resource referenced in resourceURI. Used by a core or domain update to identify the
              domain schema in a NIEM release being incrementally updated (not replaced).
              &lt;/body> &lt;/html> not replaced). &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-conforms_to" name="conforms_to">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-conforms_to-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-conforms_to">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              relationshipCode value for indicating that this MPD conforms to the specification or
              standard referenced in resourceURI. &lt;/body> &lt;/html> URI.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-version_of" name="version_of">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-version_of-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-version_of">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              relationshipCode value for indicating that this MPD is a different version of the MPD
              referenced in resourceURI. This code value is only needed in cases where significant
              name changes might obscure the relationship to the previous version. For example, NIEM
              Justice 4.1 is a version of GJXDM 3.0.3. &lt;/body> &lt;/html>
              ion of GJXDM 3.0.3. &lt;/body> &lt;/html> l> </body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-specializes" name="specializes">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-specializes-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-specializes">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              relationshipCode value for indicating that this MPD is a specialization of the MPD
              referenced in resourceURI. This value is the inverse of generalizes.
              &lt;/body> &lt;/html> eralizes. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-generalizes" name="generalizes">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-generalizes-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-generalizes">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              relationshipCode value for indicating that this MPD is a generalization of the MPD
              referenced in resourceURI. This value is the inverse of specializes.
              &lt;/body> &lt;/html> cializes. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-supersedes" name="supersedes">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-supersedes-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-supersedes">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              relationshipCode value for indicating that this MPD replaces the MPD referenced in
              resourceURI. &lt;/body> &lt;/html> URI. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-deprecates" name="deprecates">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-deprecates-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-deprecates">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              relationshipCode value for indicating that content in this MPD is preferred over
              content in the MPD referenced in resourceURI; and at some time in the future will
              supersede the MPD referenced in resourceURI &lt;/body>
              &lt;/html> sourceURI &lt;/body> &lt;/html> l>
            </body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-adapts" name="adapts">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-adapts-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-adapts">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              relationshipCode value for indicating that this MPD is an adaptation of the MPD
              referenced in resourceURI. &lt;/body> &lt;/html> URI.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
    </ownedLiteral>
  </packagedElement>
  <packagedElement xmi:type="uml:Enumeration" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode" name="PurposeCode">
    <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode">
      <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
            margin:0px;} &lt;/style> &lt;/head> &lt;body>
            &lt;p> An indication of the type of an MPD artifact. This further indicates
            how it should be processed by software tools. &lt;/p> &lt;p> The
            literals of this enumeration correspond to MPD nature URIs of the form
            &quot;http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#&lt;purpose-code>&quot;.
            &lt;/p> &lt;p> [Note these NIEM-UML enumeration literals differ
            from the NIEM MPD Specification v1.0 in that they use underscore (&quot;_&quot;) instead of dash
            (&quot;-&quot;). This is due to issues with dashes in some UML tools.] Reference Section 4.2.4 and
            Appendix G of NIEM MPD Specification v1.0
            (http://reference.niem.gov/niem/specification/model-package-description/1.0/).
            &lt;/p> &lt;p>   &lt;/p> &lt;/body>
            &lt;/html> nce.niem.gov/niem/specification/model-package-description/1.0/).
            &lt;/p> &lt;p>   &lt;/p> &lt;/body>
            &lt;/html> p> &lt;/body> &lt;/html> </body>
    </ownedComment>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-extension_schema_set" name="extension_schema_set">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-extension_schema_set-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-extension_schema_set">
        <body>Serves the purpose of a collection of XML schemas which contain new or extend existing NIEM data components and conform to the NIEM Naming and Design Rules.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-reference_schema_set" name="reference_schema_set">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-reference_schema_set-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-reference_schema_set">
        <body>Serves the purpose of a collection of XML schemas that contain data components that are authoritive for NIEM.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-subset_schema_set" name="subset_schema_set">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-subset_schema_set-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-subset_schema_set">
        <body>Serves the purpose of a collection of XML schemas which have been derived from and represent a subset of a particular NIEM reference schema set (release).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-file" name="file">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-file-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-file">
        <body>Serves the purpose of a block of arbitrary information, or resource for storing information, which is available to a computer program and is usually based on some kind of durable storage.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-business_rules" name="business_rules">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-business_rules-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-business_rules">
        <body>Serves the purpose of a statement or set of statements (formal or informal) that define and/or constrain some aspect of business data or information.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-catalog" name="catalog">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-catalog-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-catalog">
        <body>Serves the purpose of identifying, locating, and describing all artifacts in a model package description.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-documentation" name="documentation">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-documentation-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-documentation">
        <body>Serves the purpose of describing or explaining any aspect of design, usage, testing, processing, etc. of a model package description and/or its contents.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-administrative" name="administrative">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-administrative-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-administrative">
        <body>Serves the purpose of documentation that relates to business operations, decisions, organizing people and resources, agreements, testimonials, etc. about a model package description.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-endorsement" name="endorsement">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-endorsement-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-endorsement">
        <body>Serves the purpose of documentation that supports, approves, sanctions, or recommends a model package description.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-memorandum" name="memorandum">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-memorandum-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-memorandum">
        <body>Serves the purpose of documentation that records events, observations, agreements, or other business related aspects pertaining to a model package description.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-report" name="report">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-report-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-report">
        <body>Serves the purpose of a document that records evaluation results produced through review, testing, or analysis that was executed by automatic processing, manual (human) means, or a combination of both.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-conformance_report" name="conformance_report">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-conformance_report-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-conformance_report">
        <body>Serves the purpose of a report that evaluates NIEM conformance.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-quality_assurance_report" name="quality_assurance_report">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-quality_assurance_report-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-quality_assurance_report">
        <body>Serves the purpose of a report that evaluates or measures degree of excellence against some prescribed criteria.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-test_report" name="test_report">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-test_report-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-test_report">
        <body>Serves the purpose of a document that records the results of testing.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-technical_reference" name="technical_reference">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-technical_reference-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-technical_reference">
        <body>Serves the purpose of technical documentation that defines, describes, or explains technical aspects of a model package description.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-non-normative_reference" name="non-normative_reference">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-non-normative_reference-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-non-normative_reference">
        <body>Serves the purpose of technical documentation that provides informal guidance or recommends methods that relate to technical aspects of a model package description.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-normative_reference" name="normative_reference">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-normative_reference-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-normative_reference">
        <body>Serves the purpose of technical documentation that provides formal specifications, instructions, or rules for techniques and methods that relate to a model package description.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-metadata_extended" name="metadata_extended">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-metadata_extended-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-metadata_extended">
        <body>Serves the purpose of an XML artifact that provides additional metadata beyond that contained in a model package description catalog.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-sample_instance" name="sample_instance">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-sample_instance-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-sample_instance">
        <body>Serves the purpose of an XML instance document that exemplifies a typical instance that validates against an XML schema or schema set.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-schema" name="schema">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-schema-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-schema">
        <body>Serves the purpose of an XML schema in general.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-constraint_schema" name="constraint_schema">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-constraint_schema-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-constraint_schema">
        <body>Serves the purpose of an XML schema that defines additional constraints on XML instances beyond those that NIEM Naming and Design Rules are capable of enforcing.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-exchange_schema" name="exchange_schema">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-exchange_schema-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-exchange_schema">
        <body>Serves the purpose of an XML schema that is a root schema (and declares a root element) for an IEPD.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-extension_schema" name="extension_schema">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-extension_schema-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-extension_schema">
        <body>Serves the purpose of an XML schema that extends a NIEM release in accordance with the NIEM Naming and Design Rules.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-incremental_schema" name="incremental_schema">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-incremental_schema-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-incremental_schema">
        <body>Serves the purpose of an XML schema within a Domain Update that represents incremental changes to an existing NIEM domain.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-reference_schema" name="reference_schema">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-reference_schema-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-reference_schema">
        <body>Serves the purpose of an XML schema that defines and declares NIEM data components that are authoritative.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-replacement_schema" name="replacement_schema">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-replacement_schema-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-replacement_schema">
        <body>Serves the purpose of an XML schema within a domain update that represents a complete replacement of an existing NIEM domain schema.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-subset_schema" name="subset_schema">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-subset_schema-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-subset_schema">
        <body>Serves the purpose of an XML schema that has been derived from a NIEM reference schema and represents a subset of the reference schema.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-tool_specific_file" name="tool_specific_file">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-tool_specific_file-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-tool_specific_file">
        <body>Serves the purpose of an artifact that is an input to or output from some software tool used to develop contents of or implement a model package description. Such artifacts may be in either a standard open format or proprietary format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-wantlist" name="wantlist">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-wantlist-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-wantlist">
        <body>Serves the purpose of an XML instance document that represents a NIEM schema subset and is an input to or output from the NIEM Schema Subset Generation Tool.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-file_set" name="file_set">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-file_set-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-file_set">
        <body>Serves the purpose of a collection of files managed together for a specific purpose or reason.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-schema_set" name="schema_set">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-schema_set-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-schema_set">
        <body>Serves the purpose of a collection of XML schemas that are maintained together for a logical reason or purpose (usually because of inter dependencies).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-constraint_schema_set" name="constraint_schema_set">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-constraint_schema_set-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-constraint_schema_set">
        <body>Serves the purpose of a collection of XML schemas which impose additional constraints on the XML instance documents (IEPs) of an IEPD.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-exchange_schema_set" name="exchange_schema_set">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-exchange_schema_set-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-exchange_schema_set">
        <body>Serves the purpose of a collection of XML schemas which declare root elements for XML instance documents (IEPs) of an IEPD.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-changelog" name="changelog">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-changelog-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-changelog">
        <body>Serves the purpose of recording all changes (additions, deletions, modifications) to a model package description relative to a previous version.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-web_service" name="web_service">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-web_service-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-web_service">
        <body>A definition for network services as a set of endpoints operating on messages containing either document-oriented or procedure-oriented information.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-data_dictionary" name="data_dictionary">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-data_dictionary-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-data_dictionary">
        <body>Serves the purpose of a record of information about data (i.e. metadata) such as names, meaning, relationships to other data, origin, usage, and format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-data_model" name="data_model">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-data_model-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-data_model">
        <body>Serves the purpose of a formal representation (e.g., UML) of business data requirements that indicates data semantics, structure, and relationships.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-display" name="display">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-display-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-display">
        <body>Serves the purpose of formatting information for viewing on a computer monitor.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-mapping" name="mapping">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-mapping-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-mapping">
        <body>Serves the purpose of describing how one data model or set of data components corresponds to another by identifying semantic equivalence or similarity.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-master_document" name="master_document">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-master_document-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-master_document">
        <body>Serves the purpose of a primary source of documentation; a readme file; a first documentation source to consult and one that may reference other supplemental documentation.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-ontology" name="ontology">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-ontology-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-ontology">
        <body>Serves the purpose of a standardized representation of knowledge as a set of concepts within a domain, and the relationships between those concepts. It can be used to reason about the entities within that domain, and may be used to describe the domain.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-transformation" name="transformation">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-transformation-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-transformation">
        <body>Serves the purpose of translating an artifact into another format or representation.</body>
      </ownedComment>
    </ownedLiteral>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship" name="ModelPackageDescriptionRelationship">
    <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship">
      <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
            margin:0px;} &lt;/style> &lt;/head> &lt;body>
            &lt;p> The ModelPackageDescriptionRelationship stereotype applies to a
            Dependency that represents a relationship between MPDs or between an MPD and another
            resource (such as a NIEM specification; as in the case of conforms-to). There are many
            ways one MPD may relate to another. This makes it extremely difficult to specify a fixed
            set of values that could objectively define an exact relationship between a pair of
            MPDs. Therefore, the optional descriptionText attribute is provided to further explain
            the nature of any of the eight relationshipCode values available (version_of,
            specializes, generalizes, deprecates, supersedes, adapts, conforms_to, updates). In some
            cases, the value of relationshipCode may be generic enough to require a more detailed
            explanation in descriptionText (for example, if the value is &quot;adapts&quot;).
            &lt;/p> &lt;/body> &lt;/html> in descriptionText (for
            example, if the value is &quot;adapts&quot;). &lt;/p> &lt;/body>
            &lt;/html> /body> &lt;/html> </body>
    </ownedComment>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-descriptionText" name="descriptionText" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-descriptionText-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-descriptionText">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> A more detailed or specific textual explanation of the relationship
              between the MPDs or between an MPD and a resource (such as a specification).
              &lt;/p> &lt;p> The catalog provides a Relationship element with
              three attributes (resourceURI, relationshipCode, and descriptionText) to identify the
              pedigree of an MPD. There are many ways that one MPD may relate to another. This makes
              it extremely difficult to specify a fixed set of values that could objectively define
              an exact relationship between a pair of MPDs. Therefore, the optional descriptionText
              attribute is provided to further explain the nature of any of the eight
              relationshipCode values available (version_of, specializes, generalizes, deprecates,
              supersedes, adapts, conforms_to, updates). In some cases, the value of
              relationshipCode may be generic enough to require a more detailed explanation in
              descriptionText (for example, if the value is &quot;adapts&quot;). &lt;/p>
              &lt;/body> &lt;/html> optional descriptionText attribute is
              provided to further explain the nature of any of the eight relationshipCode values
              available (version_of, specializes, generalizes, deprecates, supersedes, adapts,
              conforms_to, updates). In some cases, the value of relationshipCode may be generic
              enough to require a more detailed explanation in descriptionText (for example, if the
              value is &quot;adapts&quot;). &lt;/p> &lt;/body> &lt;/html> the
              value of relationshipCode may be generic enough to require a more detailed explanation
              in descriptionText (for example, if the value is &quot;adapts&quot;). &lt;/p>
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-descriptionText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878323_104498_2191" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-base_Dependency" name="base_Dependency" visibility="private" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878318_196100_2172" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878318_346198_2173" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-relationshipCode" name="relationshipCode" visibility="public" type="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-relationshipCode-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-relationshipCode">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              classification or reason for the connectedness between the MPDs or between an MPD and
              a resource. &lt;/body> &lt;/html> a resource.
              &lt;/body> &lt;/html> > &lt;/html> </body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878334_789238_2235" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878334_985645_2236" name="" value="1"/>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-relationshipCode-defaultValue" name="" instance="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-conforms_to"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7" name="" memberEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7-ownedEnd NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-base_Dependency" navigableOwnedEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7-ownedEnd">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7-ownedEnd" name="extension_" visibility="private" type="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship" aggregation="composite" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7-ownedEnd-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878333_832388_2229" name="" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription" name="ModelPackageDescription">
    <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
            margin:0px;} &lt;/style> &lt;/head> &lt;body>
            &lt;p> A ModelPackageDescription Component represents a NIEM Model Package
            Description (MPD). Specifically, it represents the information in an MPD catalog.
            Reference NIEM MPD Specification v1.0
            (http://reference.niem.gov/niem/specification/model-package-description/1.0/)
            &lt;br>An MPD is a logical set of electronic files aggregated and organized
            to fulfill a specific purpose in NIEM. Directory organization and packaging of an MPD
            should be designed around major themes in NIEM: reuse, sharing, interoperability, and
            efficiency. The inclusion of artifacts in an MPD is modeled using a Usage dependency
            from the Component representing the MPD to the model element representing the artifact
            (most commonly a Namespace Package). &lt;br> &lt;/p>
            &lt;/body> &lt;/html> senting the artifact (most commonly a
            Namespace Package). &lt;br> &lt;/p> &lt;/body>
            &lt;/html> &lt;/body> &lt;/html> </body>
    </ownedComment>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-05_" name="MPD [Rule 4-05]">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-05_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-05_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 4-5] &lt;/b>The URI for an MPD
              MUST end in its version number. &lt;/p> &lt;p>
              &lt;/p> &lt;p> The tag value for mpdURI is derived and computed
              from the version number. &lt;/p> &lt;/body>
              &lt;/html> mputed from the version number. &lt;/p>
              &lt;/body> &lt;/html> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-05_-specification" name="">
        <language>OCL2.0</language>
        <body>derive: self.mpdBaseURI.repr().concat(self.mpdVersionID.repr()).oclAsType(AnyURI) </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-04_" name="MPD [Rule 4-04]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-04_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-04_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 4-4]&lt;/b> Every MPD MUST be assigned a valid http
              URI. &lt;/body> &lt;/html> &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-04_-specification" name="">
        <language>OCL2.0</language>
        <body>self.mpdBaseURI.repr().startsWith('http:/') </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-14_" name="MPD [Rule 4-14]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-14_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-14_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 4-14]&lt;/b> An IEPD or an EIEM MUST contain a
              master document located in the MPD root directory whose filename begins with the
              substring &quot;master-document&quot;. &lt;/body> &lt;/html> nt&quot;.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-14_-specification" name="">
        <language>English</language>
        <body>Constraints on master document are resolved during PSM-MPD transformation.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-01_" name="MPD [Rule 4-01]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-01_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-01_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 4-1] &lt;/b>An MPD MUST contain an XML catalog
              artifact that validates with the NIEM MPD catalog schema (XSD) and that resides in the
              root directory of the MPD and bears the file name &quot;catalog.xml&quot;. &lt;/body>
              &lt;/html> ml&quot;. &lt;/body> &lt;/html> l>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-01_-specification" name="">
        <language>English</language>
        <body>Constraint is resolved via PSM-MPD transformations which produce the catalog as
              specified by the MPD. </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-12_" name="MPD [Rule 4-12]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-12_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-12_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 4-12] &lt;/b>Every MPD that is an
              IEPD or EIEM MUST contain a change log artifact that: &lt;/p>
              &lt;p> � Records changes to previous IEPD or EIEM schemas that this MPD
              represents. &lt;/p> &lt;p> � Begins with the substring
              &quot;changelog&quot;. &lt;/p> &lt;p> � Resides in the root directory of
              the MPD. &lt;/p> &lt;/body> &lt;/html>
              &lt;p> � Resides in the root directory of the MPD. &lt;/p>
              &lt;/body> &lt;/html> &lt;/body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-12_-specification" name="">
        <language>English</language>
        <body>Constraints on changelogs are resolved by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-9_" name="MPD [Rule 6-9]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-9_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-9_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-9]&lt;/b> Within any artifact of an MPD archive,
              any direct reference to another resource (i.e., another artifact such as an image,
              schema, stylesheet, etc.) that is required to process or display an artifact SHOULD
              exist within the archive at the location specified by that reference.
              &lt;/body> &lt;/html> hat reference. &lt;/body>
              &lt;/html> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-9_-specification" name="">
        <language>English</language>
        <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-5_" name="MPD [Rule 6-5]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-5_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-5_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-5]&lt;/b> Absolute references to Internet
              resources MUST use a well-known transfer protocol (http, https, ftp, ftps) and MUST
              resolve (If applicable, documentation that describes how to resolve with security,
              account, and/or password issues MUST be included). &lt;/body>
              &lt;/html> be included). &lt;/body> &lt;/html>
              ml> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-5_-specification" name="">
        <language>English</language>
        <body>Constraints on URIs are partially satisfied by specific URI Constraints expressed
              elsewhere in the NDR and MPD. For URI references embedded elsewhere in the model, it
              would be difficult to express the constraint in OCL. This constraint must be manually
              resolved by the modeler. </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3a_" name="MPD [Rule 6-3a]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3a_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3a_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-3a]&lt;/b> An MPD archive file
              MUST use file name syntax defined by the regular expression: &lt;/p>
              &lt;p> mpd-filename ::= name '-' version '.' class '.zip'
              &lt;/p> &lt;p> Where: &lt;/p> &lt;p
              style=&quot;margin-left:10.0px;&quot;> name ::= alphanum ((alphanum | special)*
              alphanum)? &lt;/p> &lt;p style=&quot;margin-left:10.0px;&quot;> alphanum
              ::= [a-zA-Z0-9] &lt;/p> &lt;p style=&quot;margin-left:10.0px;&quot;>
              special ::= '.' | '-' | '_' &lt;/p> &lt;p
              style=&quot;margin-left:10.0px;&quot;> version ::= digit+ ('.' digit+)* (status digit+)?
              &lt;/p> &lt;p style=&quot;margin-left:10.0px;&quot;> digit ::= [0-9]
              &lt;/p> &lt;p style=&quot;margin-left:10.0px;&quot;> status ::= 'alpha' |
              'beta' | 'rc' | 'rev' &lt;/p> &lt;p style=&quot;margin-left:10.0px;&quot;>
              class ::= 'rel' | 'cu' | 'du' | 'iepd' | 'eiem' &lt;/p> &lt;p
              style=&quot;margin-left:0.0px;&quot;> All alpha characters SHOULD be lower case to reduce
              the risk of complications across various file systems. See [&lt;a
              href=&quot;mdel://_17_0_3_24a0131_1321168952839_661693_1978&quot;>Rule
              4-3&lt;/a>] for an explanation of the status options. &lt;/p>
              &lt;p style=&quot;margin-left:0.0px;&quot;> (The regular expression notation used
              above is from XML 1.0 (Fifth Edition): &lt;a
              href=&quot;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&quot;>http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&lt;/a>)
              &lt;/p> &lt;/body> &lt;/html> sion notation used
              above is from XML 1.0 (Fifth Edition): &lt;a
              href=&quot;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&quot;>http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&lt;/a>)
              &lt;/p> &lt;/body> &lt;/html> body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3a_-specification" name="">
        <language>English</language>
        <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13.1_" name="MPD [Rule 4-13.1]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13.1_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13.1_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 4-13.1]&lt;/b> If an IEPD or EIEM
              contains more than one change log artifact, then each change log artifact MUST:
              &lt;/p> &lt;p> � Have a file name that begins with the substring
              &quot;changelog&quot;. &lt;/p> &lt;p> � Reside in the MPD root directory .
              &lt;/p> &lt;/body> &lt;/html> � Reside in the MPD
              root directory . &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13.1_-specification" name="">
        <language>English</language>
        <body>Constraints on changelogs are resolved by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-11_" name="MPD [Rule 4-11]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-11_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-11_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 4-11] &lt;/b>Every MPD that is a
              reference schema set (i.e., NIEM releases, core updates, and domain updates) MUST
              contain an XML change log artifact that: &lt;/p> &lt;p> �
              Validates with the NIEM change log schemas (mpd-changelog.xsd and niem-model.xsd).
               Note: These are the base filenames; the actual filenames also contain a version
              number. For example: mpd-changelog-1.0.xsd is the current version. &lt;/p>
              &lt;p> � Records changes to previous reference schemas that this MPD
              represents. &lt;/p> &lt;p> � Bears the file name
              &quot;changelog.xml&quot;. &lt;/p> &lt;p> � Resides in the root directory
              of the MPD. &lt;/p> &lt;/body> &lt;/html>
              &quot;changelog.xml&quot;. &lt;/p> &lt;p> � Resides in the root directory
              of the MPD. &lt;/p> &lt;/body> &lt;/html> /p>
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-11_-specification" name="">
        <language>English</language>
        <body>Constraints on changelog are resolved during PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-06_" name="MPD [Rule 3-06]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-06_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-06_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 3-6] &lt;/b>An IEPD MUST contain at least one
              exchange schema artifact that declares at least one top-level root element for IEP
              instances specified by the IEPD. &lt;/body> &lt;/html> the IEPD.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-06_-specification" name="">
        <language>OCL2.0</language>
        <body>( self.base_Component.profiledBy('NIEM_PSM_Profile') and
              (self.mpdClassCode=ModelPackageDescriptionClassCode::iepd) ) implies
              self.base_Component.elementImport ->exists(elementImport|
              elementImport.stereotypedBy('ModelPackageDescriptionFile') and (
              elementImport.getStereotypeApplication('ModelPackageDescriptionFile').purposeURI=
              'http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#exchange-schema' )
              and elementImport.importElement.oclAsType(Package).packagedElement
              ->exists(e|e.stereotypedBy('PropertyHolder') and
              e.oclAsType(Class).ownedAttribute->notEmpty()) ) </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-15_" name="MPD [Rule 4-15]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-15_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-15_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 4-15]&lt;/b> A NIEM IEPD or EIEM master document
              SHOULD (at a minimum) describe the MPD purpose, scope, business value, exchange
              information, senders/receivers, interactions, and references to other documentation.
              &lt;/body> &lt;/html> documentation. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-15_-specification" name="">
        <language>English</language>
        <body>Constraints on master document are resolved by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3c_" name="MPD [Rule 6-3c]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3c_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3c_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-3c]&lt;/b> Within an MPD,the
              &lt;class> substring in the file name MUST correctly correspond to the
              value for the attribute mpdClassCode within catalog.xml. Correct correspondence is:
              &lt;/p> &lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;>
              &lt;tr> &lt;td>  IF file name &lt;class>=
              &lt;/td> &lt;td>  THEN catalog.xml mpdClassCode =
              &lt;/td> &lt;/tr> &lt;tr> &lt;td>  rel
              &lt;/td> &lt;td>  release &lt;/td>
              &lt;/tr> &lt;tr> &lt;td>  cu &lt;/td>
              &lt;td>  core-update &lt;/td> &lt;/tr>
              &lt;tr> &lt;td>  du &lt;/td> &lt;td>
               domain-update &lt;/td> &lt;/tr> &lt;tr>
              &lt;td>  iepd &lt;/td> &lt;td>  iepd
              &lt;/td> &lt;/tr> &lt;tr> &lt;td>  eiem
              &lt;/td> &lt;td>  eiem &lt;/td> &lt;/tr>
              &lt;/table> &lt;/body> &lt;/html>  cu
              &lt;/td> &lt;td>  core-update &lt;/td>
              &lt;/tr> &lt;tr> &lt;td>  du &lt;/td>
              &lt;td>  domain-update &lt;/td> &lt;/tr>
              &lt;tr> &lt;td>  iepd &lt;/td> &lt;td>
               iepd &lt;/td> &lt;/tr> &lt;tr> &lt;td>
               eiem &lt;/td> &lt;td>  eiem &lt;/td>
              &lt;/tr> &lt;/table> &lt;/body> &lt;/html>
              &lt;/td> &lt;/tr> &lt;tr> &lt;td>  iepd
              &lt;/td> &lt;td>  iepd &lt;/td> &lt;/tr>
              &lt;tr> &lt;td>  eiem &lt;/td> &lt;td>
               eiem &lt;/td> &lt;/tr> &lt;/table>
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3c_-specification" name="">
        <language>English</language>
        <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03_" name="MPD [Rule 4-03]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 4-3]&lt;/b> All NIEM version
              numbers adhere to the regular expression: &lt;/p> &lt;p> version
              ::= digit+ ('.' digit+)* (status digit+)? &lt;/p> &lt;p> Where:
              &lt;/p> &lt;p> digit ::= [0-9] &lt;/p>
              &lt;p> status ::= 'alpha' | 'beta' | 'rc' | 'rev' &lt;/p>
              &lt;p> 'alpha' indicates early development &lt;/p>
              &lt;p> 'beta' indicates late development; but changing or incomplete
              &lt;/p> &lt;p> 'rc' indicates release candidate; complete but
              not approved as operational &lt;/p> &lt;p> 'rev' indicates very
              minor revision that does not impact schema validation &lt;/p>
              &lt;p> (The regular expression notation used above is from XML 1.0 (Fifth
              Edition): &lt;a
              href=&quot;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&quot;>http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&lt;/a>)
              &lt;/p> &lt;/body> &lt;/html> om XML 1.0 (Fifth
              Edition): &lt;a
              href=&quot;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&quot;>http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&lt;/a>)
              &lt;/p> &lt;/body> &lt;/html> body>
              &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03_-specification" name="">
        <language>OCL2.0</language>
        <body>self.mpdVersionID.match('[0-9]+(\\.[0-9]+)*((alpha|beta|rc|rev)[0-9]+)?') </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-1_" name="MPD [Rule 6-1]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-1_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-1_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-1] &lt;/b>An MPD is packaged as a single
              compressed archive of files that represents a sub-tree of a file system in
              standard&lt;b> [PK-ZIP]&lt;/b> format. This archive MUST
              preserve and store the logical directory structure intended by its author.
              &lt;/body> &lt;/html> by its author. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-1_-specification" name="">
        <language>English</language>
        <body>Constraints on packaging are resolved during PSM-MPD transformation.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-09_" name="MPD [Rule 3-09]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-09_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-09_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 3-9]&lt;/b> A NIEM-conforming IEPD or EIEM MUST
              contain at least one schema that is either a NIEM reference schema or a subset derived
              from a NIEM reference schema. &lt;/body> &lt;/html> e schema.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-09_-specification" name="">
        <language>OCL2.0</language>
        <body>( self.base_Component.profiledBy('NIEM_PSM_Profile') and (
              (self.mpdClassCode=ModelPackageDescriptionClassCode::iepd) or
              (self.mpdClassCode=ModelPackageDescriptionClassCode::eiem) ) ) implies
              self.base_Component.elementImport
              ->select(elementImport|elementImport.stereotypedBy('ModelPackageDescriptionFile')).getStereotypeApplication('ModelPackageDescriptionFile').purposeURI
              ->exists(purposeURI|
              (purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#subset-schema')
              or
              (purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
              ) </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-09_" name="MPD [Rule 4-09]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-09_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-09_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 4-9]&lt;/b> A URI reference to an
              individual MPD artifact from another resource is the concatenation of
              &lt;/p> &lt;p> � The URI of the MPD that contains the artifact.
              &lt;/p> &lt;p> � The crosshatch or pound character (&quot;#&quot;).
              &lt;/p> &lt;p> � A fragment identifier that is the locally
              unique id of the artifact within the catalog of the MPD itself. &lt;/p>
              &lt;/body> &lt;/html> f the artifact within the catalog of the
              MPD itself. &lt;/p> &lt;/body> &lt;/html>
              body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-09_-specification" name="">
        <language>English</language>
        <body>Explicit URI references are not modelled for well known artifacts such as schemas.
              Serialization of MPD artifacts such as schemas are via PSM-MPD transformations which
              construct URI references according to this MPD rule.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-07_" name="MPD [Rule 4-07]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-07_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-07_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 4-7] &lt;/b>Each file set artifact in an MPD MUST
              have a corresponding FileSet element in the catalog for that MPD. This FileSet element
              must identify each file artifact that is a member of that file set artifact.
              &lt;/body> &lt;/html> artifact. &lt;/body>
              &lt;/html> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-07_-specification" name="">
        <language>English</language>
        <body>Constraints for catalog construction are resolved in PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-6_" name="MPD [Rule 6-6]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-6_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-6_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-6] &lt;/b>A published IEPD MUST contain all
              documents necessary to understand it and allow it to be implemented correctly.
              &lt;/body> &lt;/html> tly. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-6_-specification" name="">
        <language>English</language>
        <body>This constraint is resolved by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-10_" name="MPD [Rule 3-10]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-10_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-10_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 3-10]&lt;/b> A NIEM IEPD MUST contain at least one
              valid sample XML instance (i.e., IEP) artifact for each exchange schema element that
              can be the root of a corresponding IEP. &lt;/body> &lt;/html>
              ding IEP. &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-10_-specification" name="">
        <language>English</language>
        <body>This constraint is realized by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-10_" name="MPD [Rule 4-10]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-10_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-10_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 4-10] &lt;/b>NIEM namespaces MUST NOT be used as
              URIs for MPD artifacts. &lt;/body> &lt;/html> cts.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-10_-specification" name="">
        <language>English</language>
        <body>Constraints on artifact URIs are resolved during PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3_" name="MPD [Rule 6-3]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-3] &lt;/b>An MPD archive MUST uncompress (unzip)
              to a one and only one MPD root directory. &lt;/body> &lt;/html>
              ory. &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3_-specification" name="">
        <language>English</language>
        <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-2_" name="MPD [Rule 6-2]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-2_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-2_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-2]&lt;/b> Within an MPD archive, all XSD and XML
              artifacts MUST be valid against and follow all rules for their respective
              &lt;b>[NIEM-NDR]&lt;/b> conformance targets (i.e., subset,
              constraint, extension, exchange, reference schemas, and XML instances); this includes
              being well-formed and valid XML Schema documents. &lt;/body>
              &lt;/html> L Schema documents. &lt;/body> &lt;/html>
              l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-2_-specification" name="">
        <language>English</language>
        <body>This constraint is resolved by a combination of applying all specified NDR-based
              constraints and transformations to target artifacts.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3d_" name="MPD [Rule 6-3d]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3d_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3d_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> &lt;b>[Rule 6-3d]&lt;/b> When represented on
              the Internet, an MPD archive SHOULD use the following MIME Type: &lt;/p>
              &lt;p> application/zip+&lt;class> &lt;/p>
              &lt;p> where &lt;/p> &lt;p
              style=&quot;margin-left:10.0px;&quot;> &lt;class> is one member from the set
              {rel, cu, du, iepd, eiem} &lt;/p> &lt;p
              style=&quot;margin-left:0.0px;&quot;> Use of the generic zip MIME type application/zip is
              allowed, but discouraged. No other MIME types are allowed when representing MPD
              archives. &lt;/p> &lt;/body> &lt;/html> scouraged. No
              other MIME types are allowed when representing MPD archives. &lt;/p>
              &lt;/body> &lt;/html> body> &lt;/html> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3d_-specification" name="">
        <language>English</language>
        <body>Packaging constraints are resolved by transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-02_" name="MPD [Rule 4-02]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-02_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-02_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 4-2] &lt;/b>Every MPD MUST be assigned a version
              number. &lt;/body> &lt;/html> &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-02_-specification" name="">
        <language>OCL2.0</language>
        <body>not(self.mpdVersionID.oclIsUndefined()) and (self.mpdVersionID&lt;>'')
              -- This constraint also satisfied by tag mpdVersionID, which is required to have a
              value.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3b_" name="MPD [Rule 6-3b]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3b_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3b_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-3b]&lt;/b> Within an MPD,the&lt;name>
              and &lt;version> substrings in the file name MUST match exactly the values
              for attributes mpdName and mpdVersionID within its catalog.xml artifact.
              &lt;/body> &lt;/html> artifact. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3b_-specification" name="">
        <language>English</language>
        <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-08_" name="MPD [Rule 4-08]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-08_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-08_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 4-8] &lt;/b>Each artifact identified in the catalog
              MUST be assigned an id in the format of an NCName (Non-Colonized Name) as defined by
              [W3-XML-Namespaces]. This is required for both File and FileSet artifacts.
              &lt;/body> &lt;/html> rtifacts. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-08_-specification" name="">
        <language>English</language>
        <body>All catalog constraints are resolved in PSM-MPD transformation.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13_" name="MPD [Rule 4-13]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 4-13]&lt;/b> The initial version of an IEPD or EIEM
              MUST contain a change log artifact with at least one entry for its creation date.
              &lt;/body> &lt;/html> ate. &lt;/body>
              &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13_-specification" name="">
        <language>English</language>
        <body>Constraints on changelogs are resolved during PSM-MPD transformation.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03.1_" name="MPD [Rule 4-03.1]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03.1_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03.1_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 4-3.1] &lt;/b>A higher MPD version number within a
              version series does NOT imply compatibility between versions. Compatibility between or
              among MPD versions MUST be explicitly stated in documentation. &lt;/body>
              &lt;/html> entation. &lt;/body> &lt;/html> l>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03.1_-specification" name="">
        <language>English</language>
        <body>Satisfaction of this constraint requires comparative analysis between versions;
              can not be expressed easily in OCL.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-7_" name="MPD [Rule 6-7]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-7_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-7_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-7]&lt;/b> A published IEPD MUST link (through its
              catalog) to any EIEM it is based on. &lt;/body> &lt;/html> on.
              &lt;/body> &lt;/html> ml> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-7_-specification" name="">
        <language>English</language>
        <body>An EIEM is an MPD with a packageCode of EIEM. An EIEM is typically bundled as a
              reusable model library which can be referenced from IEPDs. This relationship between
              EIEM and IEPD is used by PSM-MPD transformations to construct the catalog entries in
              resolution of this constraint.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-06_" name="MPD [Rule 4-06]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-06_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-06_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 4-6] &lt;/b>Each file artifact in an MPD MUST have a
              corresponding File element in the catalog for that MPD. &lt;/body>
              &lt;/html> MPD. &lt;/body> &lt;/html> l>
            </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-06_-specification" name="">
        <language>English</language>
        <body>Constraints for catalog construction are resolved in PSM-MPD transformation. </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-4_" name="MPD [Rule 6-4]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-4_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-4_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-4]&lt;/b> Within an MPD archive, the value of each
              xsd:import schemaLocation attribute MUST be a relative path reference that resolves to
              the correct schema within the sub-tree. &lt;/body> &lt;/html>
              sub-tree. &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-4_-specification" name="">
        <language>English</language>
        <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-8_" name="MPD [Rule 6-8]" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-8_-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-8_">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;b>[Rule 6-8]&lt;/b> Within an MPD archive, if
              non-NIEM-conforming schemas from other standards are used and referenced within an
              MPD, then all xsd:import, xsd:include, and xsd:redefine constructs used within those
              schemas MUST be modified as needed to have a value for the schemaLocation attribute
              that is a relative path reference that resolves to the correct schema within the
              sub-tree. &lt;/body> &lt;/html> ema within the sub-tree.
              &lt;/body> &lt;/html> l> </body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-8_-specification" name="">
        <language>English</language>
        <body>The schemaLocation constraints are resolved during PSM-MPD transformation.</body>
      </specification>
    </ownedRule>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-base_Component" name="base_Component" visibility="private" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878337_673768_2248" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878337_390864_2249" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdVersionID" name="mpdVersionID" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdVersionID-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdVersionID">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> Many
              published MPDs will be periodically revised and updated; therefore, versioning is
              required to clearly indicate that changes have occurred. A version number is actually
              part of the unique identification for an MPD (to be discussed in a subsequent
              section). All NIEM version numbers adhere to the regular expression:
              [0-9]+(\.[0-9]+)*((alpha|beta|rc|rev)[0-9]+)? Where: &lt;ul>
              &lt;li> &quot;alpha&quot; indicates early development &lt;/li>
              &lt;li> &quot;beta&quot; indicates late development; but changing or incomplete
              &lt;/li> &lt;li> &quot;rc&quot; indicates release candidate; complete but
              not approved as operational &lt;/li> &lt;li> &quot;rev&quot; indicates
              very minor revision that does not impact schema validation &lt;/li>
              &lt;/ul> &lt;/body> &lt;/html> ional
              &lt;/li> &lt;li> &quot;rev&quot; indicates very minor revision that does
              not impact schema validation &lt;/li> &lt;/ul>
              &lt;/body> &lt;/html> n &lt;/li> &lt;/ul>
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878324_335630_2193" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878324_372788_2194" name="" value="1"/>
      <defaultValue xmi:type="uml:LiteralString" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdVersionID-defaultValue" name="" value="1.0"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdBaseURI" name="mpdBaseURI" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdBaseURI-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdBaseURI">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> The left hand substring of an MPD URI that does not include its
              mpdVersionID. The concatenation of mpdBaseURI and mpdVersionID becomes the value of
              the mpdURI attribute of the Catalog element in the catalog instance.
              &lt;/p> &lt;p>   &lt;/p> &lt;/body>
              &lt;/html> ance. &lt;/p> &lt;p>   &lt;/p>
              &lt;/body> &lt;/html> p> &lt;/body>
              &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878317_590163_2166" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878317_699963_2167" name="" value="1"/>
      <defaultValue xmi:type="uml:LiteralString" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdBaseURI-defaultValue" name="" value="http://iepd.org/myIEPD/"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdClassCode" name="mpdClassCode" visibility="public" type="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdClassCode-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdClassCode">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> The classification code of the MPD. Implemented as the value of the
              mpdClassCode attribute of the Catalog element in the catalog instance. This code
              designates the classification or kind of the MPD. &lt;/p>
              &lt;/body> &lt;/html> This code designates the classification or
              kind of the MPD. &lt;/p> &lt;/body> &lt;/html> kind
              of the MPD. &lt;/p> &lt;/body> &lt;/html> </body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878345_786898_2279" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878345_287508_2280" name="" value="1"/>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdClassCode-defaultValue" name="" instance="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-iepd"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-descriptionText" name="descriptionText" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-descriptionText-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-descriptionText">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> A description of the MPD. A statement that provides an explanation
              or additional detail. &lt;/p> &lt;p> Implemented as the value of
              the descriptionText attribute of the Catalog element in the catalog instance.
              &lt;/p> &lt;/body> &lt;/html> element in the catalog
              instance. &lt;/p> &lt;/body> &lt;/html> ce.
              &lt;/p> &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-descriptionText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878335_822656_2238" name="" value="1"/>
      <defaultValue xmi:type="uml:LiteralString" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-descriptionText-defaultValue" name="" value="An exchange to notify partner agencies to perform contingency operations."/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-SecurityMarkingText" name="SecurityMarkingText" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-SecurityMarkingText-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-SecurityMarkingText">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A label
              that defines how this MPD must be handled or can be distributed to protect the
              information it contains; the security marking for the MPD. Implemented as the value of
              the SecurityMarkingText element in the catalog instance. Default is &quot;unclassified&quot;.
              &lt;/body> &lt;/html> t element in the catalog instance. Default
              is &quot;unclassified&quot;. &lt;/body> &lt;/html> &quot;unclassified&quot;.
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878331_495229_2222" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878331_614722_2223" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-CreationDate" name="CreationDate" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-CreationDate-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-CreationDate">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> Date
              this MPD was published or created. Implemented as the value of the CreationDate
              element in the catalog instance. &lt;/body> &lt;/html> catalog
              instance. &lt;/body> &lt;/html> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878327_13343_2204" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878327_475524_2205" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-LastRevsionDate" name="LastRevsionDate" visibility="public">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-LastRevsionDate-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-LastRevsionDate">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> Date the MPD was last revised. Implemented as the value of the
              LastRevisionDate element in the catalog instance. &lt;/p>
              &lt;/body> &lt;/html> the catalog instance. &lt;/p>
              &lt;/body> &lt;/html> /p> &lt;/body>
              &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-LastRevsionDate-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878312_319075_2154" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-NextRevisionDate" name="NextRevisionDate" visibility="public">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-NextRevisionDate-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-NextRevisionDate">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> An estimate of the projected date the MPD is expected to be revised
              again (if known). Implemented as the value of the NextRevisionDate element in the
              catalog instance. &lt;/p> &lt;/body> &lt;/html> the
              NextRevisionDate element in the catalog instance. &lt;/p>
              &lt;/body> &lt;/html> instance. &lt;/p>
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-NextRevisionDate-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878351_273188_2302" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-StatusText" name="StatusText" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-StatusText-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-StatusText">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              Description of the current state of development or usage of the MPD; may also project
              future plans for the MPD. Implemented as the value of the StatusText element in the
              catalog instance. &lt;/body> &lt;/html> the StatusText element
              in the catalog instance. &lt;/body> &lt;/html> instance.
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-StatusText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878338_41048_2254" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-KeywordText" name="KeywordText" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-KeywordText-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-KeywordText">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              keyword associated with the MPD; a common alias, term, or phrase that would help to
              facilitate search and discovery of this MPD. Implemented as the value of the
              KeywordText element in the catalog instance. &lt;/body>
              &lt;/html> lue of the KeywordText element in the catalog instance.
              &lt;/body> &lt;/html> g instance. &lt;/body>
              &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878338_833964_2255" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-KeywordText-upperValue" name="" value="*"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-DomainText" name="DomainText" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-DomainText-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-DomainText">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A NIEM
              Domain applicable to, associated with, or that uses the MPD. Implemented as the value
              of the DomainText element in the catalog instance. &lt;/body>
              &lt;/html> lement in the catalog instance. &lt;/body>
              &lt;/html> &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878321_31484_2184" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-DomainText-upperValue" name="" value="*"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-PurposeText" name="PurposeText" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-PurposeText-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-PurposeText">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              description for the purpose, function, intended use of, or reason for the existence of
              the MPD. Implemented as the value of the PurposeText element in the catalog instance.
              &lt;/body> &lt;/html> PurposeText element in the catalog
              instance. &lt;/body> &lt;/html> tance. &lt;/body>
              &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-PurposeText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-PurposeText-upperValue" name="" value="*"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePatternText" name="ExchangePatternText" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePatternText-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePatternText">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A
              description of a transactional, design, or exchange pattern the MPD uses (generally,
              applicable to IEPDs only). Implemented as the value of the ExchangePatternText element
              in the catalog instance. &lt;/body> &lt;/html> atternText
              element in the catalog instance. &lt;/body> &lt;/html> ce.
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePatternText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePatternText-upperValue" name="" value="*"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePartnerName" name="ExchangePartnerName" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePartnerName-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePartnerName">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> Name of
              an agency, organization, or entity that uses the MPD (in particular to share or
              exchange data). Implemented as the value of the ExchangePartnerName element in the
              catalog instance. &lt;/body> &lt;/html> xchangePartnerName
              element in the catalog instance. &lt;/body> &lt;/html> ce.
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePartnerName-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePartnerName-upperValue" name="" value="*"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASName" name="ASName" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASName-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASName">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A name
              for the authoritative source for the MPD; can be author, creator, sponsor, etc.
              (person, organization, or entity). Implemented as the value of the ASName element in
              the catalog instance. &lt;/body> &lt;/html> the ASName element
              in the catalog instance. &lt;/body> &lt;/html> instance.
              &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878340_414255_2260" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878340_691870_2261" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASAddressText" name="ASAddressText" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASAddressText-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASAddressText">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> An
              address or description for the location of the authoritative source for the MPD.
              Implemented as the value of the ASAddressText element in the catalog instance.
              &lt;/body> &lt;/html> xt element in the catalog instance.
              &lt;/body> &lt;/html> ce. &lt;/body>
              &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASAddressText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878311_420146_2153" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASWebSiteURL" name="ASWebSiteURL" visibility="public" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASWebSiteURL-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASWebSiteURL">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A URL
              for the Web site of the authoritative source for the MPD. Implemented as the value of
              the ASWebSiteURL element in the catalog instance. &lt;/body>
              &lt;/html> lement in the catalog instance. &lt;/body>
              &lt;/html> &lt;/body> &lt;/html> </body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASWebSiteURL-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878323_436487_2192" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-POC" name="POC" visibility="public" type="NIEM_UML_Profile-Model_Package_Description_Profile-POCType" aggregation="composite">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-POC-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-POC">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A point
              of contact (POC) for the authoritative source for the MPD; metadata used to contact
              the authoritative source. Implemented as a POCType with values for name, email, and
              telephone in the catalog instance. &lt;/body> &lt;/html> for
              name, email, and telephone in the catalog instance. &lt;/body>
              &lt;/html> g instance. &lt;/body> &lt;/html> </body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878325_593262_2198" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-POC-upperValue" name="" value="*"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Enumeration" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode" name="NatureCode">
    <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode">
      <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
            margin:0px;} &lt;/style> &lt;/head> &lt;body>
            &lt;p> An indication of the type of an MPD artifact. This further indicates
            how it should be processed by software tools. The literals of this enumeration
            correspond to MPD nature URIs of the form
            &quot;http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/nature#&lt;nature-code>&quot;.
            &lt;/p> &lt;p> [Note these NIEM-UML enumeration literals differ
            from the NIEM MPD Specification v1.0 in that they use underscore (&quot;_&quot;) instead of dash
            (&quot;-&quot;). This is due to issues with dashes in some UML tools.] Reference Section 4.2.5 and
            Appendix G of NIEM MPD Specification v1.0
            (http://reference.niem.gov/niem/specification/model-package-description/1.0/).
            &lt;/p> &lt;p>   &lt;/p> &lt;/body>
            &lt;/html> m/specification/model-package-description/1.0/).
            &lt;/p> &lt;p>   &lt;/p> &lt;/body>
            &lt;/html> p> &lt;/body> &lt;/html> </body>
    </ownedComment>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-mpd" name="mpd">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-mpd-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-mpd">
        <body>A nature of a NIEM model package description (MPD).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-domain_update" name="domain_update">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-domain_update-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-domain_update">
        <body>A nature of a NIEM domain update model package description (MPD).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-iepd" name="iepd">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-iepd-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-iepd">
        <body>A nature of a NIEM Information Exchange Package Documentation (IEPD) model package description (MPD).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-release" name="release">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-release-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-release">
        <body>A nature of a NIEM release model package description (MPD).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-binary" name="binary">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-binary-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-binary">
        <body>A nature of a binary file with unknown or unspecified encoding or format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-doc" name="doc">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-doc-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-doc">
        <body>A nature of a Microsoft Office Word file (includes doc and docx).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-image" name="image">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-image-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-image">
        <body>A nature of an image file with unknown or unspecified format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-gif" name="gif">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-gif-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-gif">
        <body>A nature of an image file in Graphic Interchange Format (GIF).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-jpg" name="jpg">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-jpg-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-jpg">
        <body>A nature of an image file in Joint Photographic Experts Group (JPEG or JPG) format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-png" name="png">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-png-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-png">
        <body>A nature of an image file in Portable Network Graphics (PNG) format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-mdb" name="mdb">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-mdb-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-mdb">
        <body>A nature of a file in Microsoft Office Access database format (includes mdb and mdbx).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-pdf" name="pdf">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-pdf-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-pdf">
        <body>A nature of a file in Adobe Portable Document Format (PDF).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-ppt" name="ppt">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-ppt-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-ppt">
        <body>A nature of a Microsoft PowerPoint presentation file (includes ppt and pptx).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-svg" name="svg">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-svg-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-svg">
        <body>A nature of a file in Scalable Vector Graphic (SVG) format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-vsd" name="vsd">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-vsd-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-vsd">
        <body>A nature of a file in Microsoft Visio diagram format (includes vsd and vdx).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xls" name="xls">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xls-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xls">
        <body>A nature of a Microsoft Excel spreadsheet file (includes xls and xlsx).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-zip" name="zip">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-zip-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-zip">
        <body>A nature of a compressed archive in PKZIP format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-character" name="character">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-character-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-character">
        <body>A nature of a character encoded file.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-csv" name="csv">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-csv-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-csv">
        <body>A nature of a Comma Separated Value (CSV) file.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-html" name="html">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-html-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-html">
        <body>A nature of a file in the W3C HyperText Markup Language (HTML) format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-text" name="text">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-text-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-text">
        <body>A nature of a plain text file.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xml" name="xml">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xml-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xml">
        <body>A nature of a file in the W3C eXtensible Markup Language (XML) format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-catalog" name="catalog">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-catalog-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-catalog">
        <body>A nature of a NIEM model package description (MPD) catalog file format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-changelog" name="changelog">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-changelog-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-changelog">
        <body>A nature of a NIEM model package description (MPD) changelog format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-owl" name="owl">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-owl-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-owl">
        <body>A nature of a file in the W3C Web Ontology Language (OWL) format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-rdf" name="rdf">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-rdf-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-rdf">
        <body>A nature of a file in the W3C Resource Description Framework (RDF) format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-schematron" name="schematron">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-schematron-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-schematron">
        <body>A nature of a file in Schematron format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-wantlist" name="wantlist">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-wantlist-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-wantlist">
        <body>A nature of a NIEM wantlist file.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-wsdl" name="wsdl">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-wsdl-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-wsdl">
        <body>A nature of a file in the W3C Web Services Description Language (WSDL) format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xhtml" name="xhtml">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xhtml-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xhtml">
        <body>A nature of a file in the W3C XML HyperText Markup Language format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xmi" name="xmi">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xmi-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xmi">
        <body>A nature of a file in the Object Management Group (OMG) XML Metadata Interchange (XMI) format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xsd" name="xsd">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xsd-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xsd">
        <body>A nature of a file in the W3C XML Schema format.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xslt" name="xslt">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xslt-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xslt">
        <body>A nature of a file in the W3C XML Stylesheet Language (XSL) Tranformations (XSLT) format (includes both xsl and xslt).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-file_set" name="file_set">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-file_set-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-file_set">
        <body>A nature of a set of files that are grouped for a specified purpose.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-core_update" name="core_update">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-core_update-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-core_update">
        <body>A nature of a NIEM core update model package description (MPD).</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-eiem" name="eiem">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-eiem-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-eiem">
        <body>A nature of a NIEM Enterprise Information Exchange Model (EIEM) model package description (MPD).</body>
      </ownedComment>
    </ownedLiteral>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10" name="" memberEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10-ownedEnd NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-base_Component" navigableOwnedEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10-ownedEnd">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10-ownedEnd" name="extension_ModelPackageDescriptionFileSet" visibility="private" type="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet" aggregation="composite" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10-ownedEnd-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878333_964915_2230" name="" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Enumeration" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode" name="ModelPackageDescriptionClassCode">
    <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode">
      <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
            margin:0px;} &lt;/style> &lt;/head> &lt;body> A
            specified classification (type or kind) of the MPD. Implemented as the value of the
            mpdClassCode attribute of the Catalog element in the catalog instance. One and only one
            classification is allowed for any given MPD. &lt;p> [Note these NIEM-UML
            enumeration literals differ from the NIEM MPD Specification v1.0 in that they use
            underscore (&quot;_&quot;) instead of dash (&quot;-&quot;). This is due to issues with dashes in some UML
            tools.] Reference Section 4.2.5 and Appendix B of NIEM MPD Specification v1.0
            (http://reference.niem.gov/niem/specification/model-package-description/1.0/).
            &lt;/p> &lt;/body> &lt;/html>
            cification/model-package-description/1.0/). &lt;/p> &lt;/body>
            &lt;/html> &lt;/html> </body>
    </ownedComment>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-eiem" name="eiem">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-eiem-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-eiem">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> An
              Enterprise Information Exchange Model (EIEM) is an MPD that incorporates BIECs that
              meet enterprise business needs for exchanging data using NIEM [NIEM-BIEC]. An EIEM is
              an adaptation of NIEM schemas, tailored and constrained for and by an enterprise. An
              EIEM will contain the following schemas that are commonly used or expected to be used
              by the authoring enterprise: one standard NIEM schema subset and one or more NIEM
              extension schemas that extend existing NIEM data components or establish new data
              components. &lt;br> &lt;/body> &lt;/html> ish new
              data components. &lt;br> &lt;/body> &lt;/html>
              y> &lt;/html> </body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-iepd" name="iepd">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-iepd-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-iepd">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> NIEM Information Exchange Package Documentation (IEPD) is an MPD
              that defines a recurring XML data exchange. An NIEM IEPD is a set of valid XML schemas
              that may include portions of NIEM Core schemas, portions of NIEM Domain schemas,
              enterprise-specific or IEPD-specific extension schemas, and at least one exchange
              schema that defines a document element (as defined in [W3-XML-InfoSet]). The schemas
              contained in an IEPD work together to define a class of XML instances that
              consistently encapsulate data for information exchanges. Each XML instance in this
              class validates against the set of XML schemas contained within the IEPD.
              &lt;/p> &lt;/body> &lt;/html> gainst the set of XML
              schemas contained within the IEPD. &lt;/p> &lt;/body>
              &lt;/html> &lt;/html> </body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-core_update" name="core_update">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-core_update-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-core_update">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> When necessary, the NIEM PMO can publish a core update. This is
              essentially identical to a domain update in terms of structure and use, with two
              important exceptions. First, a core update records changes that apply to a particular
              NIEM core version or another core update. This also means it is applicable to all NIEM
              releases using that same core version. Second, a core update is never published to
              replace a NIEM core. It is intended to add new schemas, new data components, new code
              values, etc. to a core without waiting for the next major release. In some cases,
              minor modifications to existing data components are possible. &lt;/p>
              &lt;/body> &lt;/html> modifications to existing data components
              are possible. &lt;/p> &lt;/body> &lt;/html>
              &lt;/html> </body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-release" name="release">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-release-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-release">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body> A NIEM
              release is an MPD containing a full set of harmonized reference schemas that
              coherently define all content within a single version of NIEM. NIEM releases include
              major, minor, and micro releases (as defined in the NIEM High Level Version
              Architecture (HLVA)). &lt;br> &lt;/body> &lt;/html>
              tecture (HLVA)). &lt;br> &lt;/body> &lt;/html>
              /html> </body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-domain_update" name="domain_update">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-domain_update-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-domain_update">
        <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
              margin:0px;} &lt;/style> &lt;/head> &lt;body>
              &lt;p> A domain update is an MPD containing reference schemas that
              represent changes to NIEM domains. The [NIEM-HLVA] defines a domain update as both a
              process and a NIEM product. Through use and analysis of NIEM releases and published
              content, domain users will identify issues and new data requirements for the domain
              and sometimes Core. NIEM domains use these issues as the basis for incremental
              improvements, extensions, and proposed changes to future NIEM releases. Both the
              process and product of the process are referred to as domain update.
              &lt;/p> &lt;/body> &lt;/html> of the process are
              referred to as domain update. &lt;/p> &lt;/body>
              &lt;/html> &lt;/html> </body>
      </ownedComment>
    </ownedLiteral>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet" name="ModelPackageDescriptionFileSet">
    <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet">
      <body>&lt;html> &lt;head> &lt;style> p {padding:0px;
            margin:0px;} &lt;/style> &lt;/head> &lt;body>
            &lt;p> A ModelPackageDescriptionFileSet Component represents a set of files
            in an MPD that are grouped for a specific purpose, function, or classification. For
            example, a set of MPD files might represent a schema subset, extension schema set, set
            of documentation, or set of test files. The MPD catalog uses the File element to
            represent artifacts, and the FileSet element to represent a set of artifacts. Note that
            both files and file sets are considered MPD artifacts. Reference Sections 4.2.3 and
            4.2.4 of NIEM MPD Specification v1.0
            (http://reference.niem.gov/niem/specification/model-package-description/1.0/).
            &lt;/p> &lt;/body> &lt;/html>
            .gov/niem/specification/model-package-description/1.0/). &lt;/p>
            &lt;/body> &lt;/html> &lt;/html> </body>
    </ownedComment>
    <ownedRule xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-unnamed1" name="unnamed1" constrainedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-unnamed1-specification" name="">
        <language>OCL2.0</language>
        <body>self.base_Package.namespace.stereotypedBy('ModelPackageDescription')</body>
      </specification>
    </ownedRule>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-externalURI" name="externalURI" visibility="public">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-externalURI-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-externalURI">
        <body>The external URI for the file set; indicates a same-as relationship to a copy of
              the file set. Implemented as the value of the externalURI attribute of the FileSet
              element in the catalog instance.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-externalURI-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878346_329831_2284" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-natureCode" name="natureCode" visibility="public" type="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-natureCode-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-natureCode">
        <body>The nature (type) of the file set. Implemented as the value of the natureURI
              attribute of the FileSet element in the catalog instance.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878322_95139_2186" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878322_188054_2187" name="" value="1"/>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-natureCode-defaultValue" name="" instance="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-file_set"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-purposeCode" name="purposeCode" visibility="public" type="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-purposeCode-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-purposeCode">
        <body>The purpose or function of the file set. Implemented as the value of the
              purposeURI attribute of the FileSet element in the catalog instance.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878319_1946_2174" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878319_726825_2175" name="" value="1"/>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-purposeCode-defaultValue" name="" instance="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-extension_schema_set"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-descriptionText" name="descriptionText" visibility="public">
      <ownedComment xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-descriptionText-ownedComment" annotatedElement="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-descriptionText">
        <body>A description of the file set. Implemented as the value of the descriptionText
              attribute of the FileSet element in the catalog instance.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-descriptionText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878342_874396_2268" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-base_Component" name="base_Component" visibility="private" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Component"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878337_539106_2250" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878337_566705_2251" name="" value="1"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13" name="" memberEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13-ownedEnd NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-base_Usage" navigableOwnedEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13-ownedEnd">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13-ownedEnd" name="extension_ModelPackageDescriptionFile" visibility="private" type="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile" aggregation="composite" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13-ownedEnd-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878311_375069_2152" name="" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeLogType" name="ChangeLogType">
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeLogType-base_Package" name="base_Package" visibility="private" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-14">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Package"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878327_650905_2206" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878327_691648_2207" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeLogType-ChangeLogSummaryText" name="ChangeLogSummaryText" visibility="public" aggregation="composite">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeLogType-ChangeLogSummaryText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878350_887269_2299" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeLogType-ChangeLogSubmitterName" name="ChangeLogSubmitterName" visibility="public" aggregation="composite">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeLogType-ChangeLogSubmitterName-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878313_243057_2157" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeLogType-ChangeLogApplicationInstructionsText" name="ChangeLogApplicationInstructionsText" visibility="public" aggregation="composite">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeLogType-ChangeLogApplicationInstructionsText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878335_218414_2237" name="" value="1"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-14" name="" memberEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-14-extension_ NIEM_UML_Profile-Model_Package_Description_Profile-ChangeLogType-base_Package" navigableOwnedEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-14-extension_">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-14-extension_" name="extension_" visibility="private" type="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeLogType" aggregation="composite" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-14">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-14-extension_-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878316_393432_2165" name="" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType" name="ChangeInformationType">
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-base_Package" name="base_Package" visibility="private" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-15">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Package"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_17_0_2_1_2aa0151_1363979878326_595063_2202" name="" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878326_903005_2203" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeSummaryText" name="ChangeSummaryText" visibility="public" aggregation="composite">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeSummaryText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878326_166823_2201" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeReasonText" name="ChangeReasonText" visibility="public" aggregation="composite">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeReasonText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878350_907797_2301" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeFullDescriptionText" name="ChangeFullDescriptionText" visibility="public" aggregation="composite">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeFullDescriptionText-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878341_249042_2265" name="" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeNCCTIssueNumber" name="ChangeNCCTIssueNumber" visibility="public" aggregation="composite">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeNCCTIssueNumber-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeNCCTIssueNumber-upperValue" name="" value="*"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeCode" name="ChangeCode" visibility="public" type="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeCodeSimpleType" aggregation="composite">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeCode-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-ChangeCode-upperValue" name="" value="*"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-15" name="" memberEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-15-extension_ NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType-base_Package" navigableOwnedEnd="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-15-extension_">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-15-extension_" name="extension_" visibility="private" type="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeInformationType" aggregation="composite" association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-15">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-15-extension_-lowerValue" name=""/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_17_0_2_1_2aa0151_1363979878331_336329_2220" name="" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Enumeration" xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeCodeSimpleType" name="ChangeCodeSimpleType">
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeCodeSimpleType-new_requirement" name="new_requirement"/>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeCodeSimpleType-bug_fix" name="bug_fix"/>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeCodeSimpleType-refactoring" name="refactoring"/>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeCodeSimpleType-harmonization" name="harmonization"/>
    <ownedLiteral xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ChangeCodeSimpleType-general_improvement" name="general_improvement"/>
  </packagedElement>
</uml:Profile>
